[{"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js":"1","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js":"2","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js":"3","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js":"4","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js":"5","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js":"6","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/store.js":"7","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/PrivateRoute.js":"8","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Dashboard.js":"9","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Navbar.js":"10","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Landing/Landing.js":"11","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/config.js":"12","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Main.js":"13","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/authActions.js":"14","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/AppBarAndDrawer/AppBarAndDrawer.js":"15","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/helpers.ts":"16","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/index.js":"17","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/types.js":"18","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/staffReducer.js":"19","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/dashboard.routes.ts":"20","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/uiReducer.js":"21","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/authReducer.js":"22","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Metric/Metric.js":"23","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/Profile.js":"24","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/Orders.js":"25","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/Staff.js":"26","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenu.js":"27","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/staffManagementActions.js":"28","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Content/Content.js":"29","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuSidebar.js":"30","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuCategoriesList.js":"31","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/Meal.js":"32","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App/App.js":"33","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Copyright.js":"34","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/RouteWithSubRoutes.js":"35","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/PeopleTable.js":"36","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/EnhancedTableHead.js":"37","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/peopleSlice.js":"38","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/PeopleDialog.js":"39","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/Driver.js":"40","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/DeletePeopleDialog.js":"41","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Login/Login.js":"42","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/Register.js":"43","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/RegisterWizard/FormikStepper.js":"44","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/useTable.js":"45","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Alert.js":"46","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SummaryCard.js":"47"},{"size":761,"mtime":1615723718759,"results":"48","hashOfConfig":"49"},{"size":619,"mtime":1606308316169,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1606296899356,"results":"52","hashOfConfig":"49"},{"size":726,"mtime":1613645974975,"results":"53","hashOfConfig":"49"},{"size":918,"mtime":1613840522490,"results":"54","hashOfConfig":"49"},{"size":464,"mtime":1613840522494,"results":"55","hashOfConfig":"49"},{"size":389,"mtime":1607120432898,"results":"56","hashOfConfig":"49"},{"size":621,"mtime":1615133231310,"results":"57","hashOfConfig":"49"},{"size":1164,"mtime":1615114779541,"results":"58","hashOfConfig":"49"},{"size":885,"mtime":1606319984480,"results":"59","hashOfConfig":"49"},{"size":855,"mtime":1607510280016,"results":"60","hashOfConfig":"49"},{"size":338,"mtime":1607507293148,"results":"61","hashOfConfig":"49"},{"size":799,"mtime":1615723459234,"results":"62","hashOfConfig":"49"},{"size":1487,"mtime":1615405462881,"results":"63","hashOfConfig":"49"},{"size":7348,"mtime":1615064920109,"results":"64","hashOfConfig":"49"},{"size":520,"mtime":1614169501425,"results":"65","hashOfConfig":"49"},{"size":228,"mtime":1614609586450,"results":"66","hashOfConfig":"49"},{"size":807,"mtime":1615209047411,"results":"67","hashOfConfig":"49"},{"size":3409,"mtime":1615806938129,"results":"68","hashOfConfig":"49"},{"size":1587,"mtime":1615372489786,"results":"69","hashOfConfig":"49"},{"size":703,"mtime":1613655370787,"results":"70","hashOfConfig":"49"},{"size":840,"mtime":1615373383515,"results":"71","hashOfConfig":"49"},{"size":228,"mtime":1615374343937,"results":"72","hashOfConfig":"49"},{"size":107,"mtime":1614176610066,"results":"73","hashOfConfig":"49"},{"size":104,"mtime":1614176602434,"results":"74","hashOfConfig":"49"},{"size":13722,"mtime":1615809726574,"results":"75","hashOfConfig":"49"},{"size":3163,"mtime":1615390398232,"results":"76","hashOfConfig":"49"},{"size":1422,"mtime":1615805652435,"results":"77","hashOfConfig":"49"},{"size":1004,"mtime":1615389994712,"results":"78","hashOfConfig":"49"},{"size":675,"mtime":1615379737845,"results":"79","hashOfConfig":"49"},{"size":3538,"mtime":1615390362381,"results":"80","hashOfConfig":"49"},{"size":558,"mtime":1615388905382,"results":"81","hashOfConfig":"49"},{"size":1581,"mtime":1615724389512,"results":"82","hashOfConfig":"49"},{"size":457,"mtime":1615328522083,"results":"83","hashOfConfig":"49"},{"size":454,"mtime":1615723424125,"results":"84","hashOfConfig":"49"},{"size":16102,"mtime":1615209827869,"results":"85","hashOfConfig":"49"},{"size":3166,"mtime":1615207366842,"results":"86","hashOfConfig":"49"},{"size":2066,"mtime":1615207590717,"results":"87","hashOfConfig":"49"},{"size":2854,"mtime":1615737114542,"results":"88","hashOfConfig":"49"},{"size":2477,"mtime":1615133933908,"results":"89","hashOfConfig":"49"},{"size":1485,"mtime":1615737000127,"results":"90","hashOfConfig":"49"},{"size":7937,"mtime":1615727954121,"results":"91","hashOfConfig":"49"},{"size":12734,"mtime":1615732873516,"results":"92","hashOfConfig":"49"},{"size":2005,"mtime":1615732843278,"results":"93","hashOfConfig":"49"},{"size":7981,"mtime":1615807690409,"results":"94","hashOfConfig":"49"},{"size":191,"mtime":1615806229841,"results":"95","hashOfConfig":"49"},{"size":886,"mtime":1615806113541,"results":"96","hashOfConfig":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"ds186k",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vxspiw",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"99"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"99"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"99"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"99"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"99"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"187"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js",[],["215","216"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js",["217"],"import React, { useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, blueGrey } from \"@material-ui/core/colors\";\n\nconst defaultTheme = {\n    palette: {\n        primary: blue,\n        secondary: blueGrey, //ss,\n        //type: \"dark\",\n    },\n    typography: {\n        fontFamily: \"'Oxanium', cursive;\",\n    },\n    status: {\n        danger: \"orange\",\n    },\n};\n\nexport function useTheme() {\n    const [currentTheme, setCurrentTheme] = useState({\n        palette: {\n            primary: blue,\n            secondary: blueGrey,\n        },\n    });\n    const muiTheme = createMuiTheme({\n        ...defaultTheme,\n        ...currentTheme,\n    });\n    return [muiTheme, setCurrentTheme];\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js",["218"],"import {\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n} from \"@material-ui/core/colors\";\r\n\r\nexport default [\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n];\r\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/store.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/PrivateRoute.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Dashboard.js",["219","220"],"import React, { useState } from \"react\";\n// components\nimport Main from \"./Main\";\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\nimport AppBarAndDrawer from \"../../Layout/AppBarAndDrawer/AppBarAndDrawer\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { useTheme } from \"../../../theme\";\n// helpers\nimport getDashboardRoutes from \"./helpers\";\n\n//redux\nimport { connect } from \"react-redux\";\n\nfunction Dashboard(props) {\n    const [currentTheme, setCurrentTheme] = useTheme();\n\n    //get user role\n    const {\n        user: { role },\n    } = props;\n\n    return (\n        <ThemeProvider theme={currentTheme}>\n            <BrowserRouter>\n                <AppBarAndDrawer\n                    currentTheme={currentTheme}\n                    setCurrentTheme={setCurrentTheme}\n                    routes={getDashboardRoutes(role)}\n                />\n\n                <Main routes={getDashboardRoutes(role)} />\n            </BrowserRouter>\n            {/* main app will be here */}\n        </ThemeProvider>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Navbar.js",[],["221","222"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Landing/Landing.js",[],["223","224"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/config.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Main.js",["225"],"import React, { Component } from \"react\";\nimport RouteWithSubRoutes from \"../../../Utils/RouteWithSubRoutes\";\nimport { Switch, withRouter } from \"react-router-dom\";\n\nexport class Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    goHome = () => {\n        this.props.history.push(this.props.routes[0].path);\n    };\n\n    componentDidMount() {\n        // redirect to the first available link\n        if (this.props.location.pathname === \"/dashboard\") {\n            this.goHome();\n        }\n    }\n\n    render() {\n        return (\n            <Switch>\n                {this.props.routes.map((route, index) => (\n                    <RouteWithSubRoutes key={index} {...route} />\n                ))}\n            </Switch>\n        );\n    }\n}\n\nexport default withRouter(Main);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/authActions.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/AppBarAndDrawer/AppBarAndDrawer.js",["226"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport PalettePicker from \"../../../Theme/PalettePicker\";\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    logo: {\n        color: \"white\",\n        textDecoration: \"none\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            backgroundColor: `#${theme.palette.primary[300].substring(1)}77`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    active: {\n        backgroundColor: theme.palette.action.selected,\n    },\n}));\n\nfunction ResponsiveDrawer(props) {\n    const { container, setCurrentTheme, currentTheme, routes } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const { pathname } = useLocation();\n    const isHome = false; // pathname === \"/\";\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    /* Modifying the source code from the template example to use the react router pathname hook to set\n  selected prop and to use the react router component prop */\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {routes.map(({ text, icon, path, component }, index) => (\n                    <ListItem\n                        component={RouterLink}\n                        selected={pathname === `/${text}`}\n                        to={`${path}`}\n                        button\n                        key={text}\n                    >\n                        <ListItemIcon>\n                            <Icon>home</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={text.toUpperCase()} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <div\n                style={{\n                    height: \"64px\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"cover\",\n                    filter: \"contrast(75%)\",\n                    backgroundImage: \"url(/img/wallpaper.jpeg)\",\n                    position: \"absolute\",\n                    top: \"0px\",\n                    width: \"100%\",\n                    zIndex: -2,\n                }}\n            />\n            <AppBar position=\"sticky\" className={isHome ? \"\" : classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        to={\"/\"}\n                        component={RouterLink}\n                        className={classes.logo}\n                    >\n                        Material World\n                    </Typography>\n                    <div style={{ flexGrow: 1 }}></div>\n                    <PalettePicker\n                        setCurrentTheme={setCurrentTheme}\n                        currentTheme={currentTheme}\n                    />\n                    <Badge badgeContent={4} color=\"primary\">\n                        <MailIcon />\n                    </Badge>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"end\"\n                        onClick={handleDrawerToggle}\n                    >\n                        <Avatar src=\"/img/driver.png\" />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            {isHome && !mobileOpen ? (\n                <div />\n            ) : (\n                <nav aria-label=\"mailbox folders\">\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={container}\n                            variant=\"temporary\"\n                            anchor={\n                                theme.direction === \"rtl\" ? \"right\" : \"left\"\n                            }\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open={isHome}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n            )}\n        </div>\n    );\n}\n\nResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    container: PropTypes.instanceOf(\n        typeof Element === \"undefined\" ? Object : Element\n    ),\n};\n\nexport default ResponsiveDrawer;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/helpers.ts",["227"],"import dashboardRoutes, {\n\tcompanyRoutes\n} from './dashboard.routes';\n\nexport interface CompanyResponse{\n    name:string;\n    owner_id: number;\n}\n\nexport interface UserResponse {\n\tid: number;\n\tfirst_name: string;\n\tlast_name: string;\n\temail: string;\n\trole: string;\n    company?:CompanyResponse\n}\n\n\nexport default function getDashboardRoutes(role:string):any[]{\n\t// TODO make sure not other user type accesses this\t\n    if(role == \"owner\"){\n        return companyRoutes;\n    }else{\n        return dashboardRoutes;\n    }\n}\n",["228","229"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/index.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/types.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/staffReducer.js",["230","231"],"import {\n    ADD_STAFF,\n    CLEAR_CURRENT,\n    LOAD_STAFF,\n    SET_CURRENT,\n    SET_STAFF,\n    DELETE_STAFF,\n    STAFF_ERROR,\n    UPDATE_STAFF,\n} from \"../types\";\n\nconst initialState = {\n    staff: [\n        {\n            id: 1,\n            department: \"finance\",\n            firstName: \"sunday\",\n            lastName: \"brian\",\n            email: \"sundaypriest@outlook.com\",\n            img:\n                \"https://media3.s-nbcnews.com/j/newscms/2019_41/3047866/191010-japan-stalker-mc-1121_06b4c20bbf96a51dc8663f334404a899.fit-760w.JPG\",\n        },\n        {\n            id: 2,\n            department: \"finance\",\n            firstName: \"sunday\",\n            lastName: \"brian\",\n            email: \"sundaypriest@outlook.com\",\n            img:\n                \"https://media3.s-nbcnews.com/j/newscms/2019_41/3047866/191010-japan-stalker-mc-1121_06b4c20bbf96a51dc8663f334404a899.fit-760w.JPG\",\n        },\n    ],\n    rows: [\n        {\n            id: 1,\n            department: \"finance\",\n            firstName: \"sunday\",\n            lastName: \"brian\",\n            email: \"sundaypriest@outlook.com\",\n            img:\n                \"https://media3.s-nbcnews.com/j/newscms/2019_41/3047866/191010-japan-stalker-mc-1121_06b4c20bbf96a51dc8663f334404a899.fit-760w.JPG\",\n        },\n        {\n            id: 2,\n            department: \"finance\",\n            firstName: \"sunday\",\n            lastName: \"brian\",\n            email: \"sundaypriest@outlook.com\",\n            img:\n                \"https://media3.s-nbcnews.com/j/newscms/2019_41/3047866/191010-japan-stalker-mc-1121_06b4c20bbf96a51dc8663f334404a899.fit-760w.JPG\",\n        },\n    ],\n    currentStaff: null,\n    loading: false,\n    error: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_STAFF:\n            return {\n                ...state,\n                loading: true,\n            };\n        case SET_STAFF:\n            return {\n                ...state,\n                staff: action.payload,\n                loading: false,\n            };\n        case ADD_STAFF:\n            return {\n                ...state,\n                staff: [...action.payload, ...state.staff],\n            };\n        case UPDATE_STAFF:\n            return {\n                ...state,\n                staff: state.staff.map((staff) =>\n                    staff.id == action.payload.id ? action.payload : staff\n                ),\n                loading: false,\n            };\n        case DELETE_STAFF:\n            return {\n                ...state,\n                // staff: [\n                //     ...state.staff.filter(\n                //         (staff) => staff.id !== action.payload\n                //     ),\n                // ],\n\n                staff: [\n                    ...state.staff.filter((person) => {\n                        return !action.payload.includes(person.id);\n                    }),\n                ],\n                loading: false,\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                currentStaff: action.payload,\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                currentStaff: null,\n            };\n        case STAFF_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/dashboard.routes.ts",["232"],"// admin routes\n\n// owner routes\n\n// staff routes\n\n// mui stuff\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\n//pages company\nimport Staff from \"../Company/Staff/Staff\";\nimport CompanyMenu from \"../Company/CompanyMenu/CompanyMenu\";\nimport Orders from \"../Company/Orders/Orders\";\nimport Profile from \"../Company/Profile/Profile\";\nimport Metric from \"../Company/Metric/Metric\";\n\nconst dashboardRoutes = [\n    {\n        path: \"/\",\n    },\n];\n\nexport const companyRoutes = [\n    {\n        path: \"/dashboard/metrics\",\n        component: Metric,\n        text: \"metrics\",\n        icon: DataUsageIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"/dashboard/staff-management\",\n        component: Staff,\n        text: \"staff-management\",\n        icon: GroupIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"/dashboard/menus\",\n        component: CompanyMenu,\n        text: \"menus\",\n        icon: BusinessIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"/dashboard/orders\",\n        component: Orders,\n        text: \"orders\",\n        icon: ShoppingBasketIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"/dashboard/profile\",\n        component: Profile,\n        text: \"profile\",\n        icon: PersonIcon,\n        layout:\"/company\"\n    },\n];\n\nexport default dashboardRoutes;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/uiReducer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/authReducer.js",["233"],"import {\n    SET_USER,\n    LOADING_UI,\n    SET_AUTHENTICATED,\n    SET_UAUTHENTICATED,\n} from \"../types\";\n\nconst initialState = {\n    user: {\n        id: 1,\n        firstName: \"sunday\",\n        lastName: \"owner\",\n        email: \"sunday@owner.com\",\n        role: \"owner\",\n        isVerified: false,\n    },\n    authenticated: true,\n};\n\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true,\n            };\n        case SET_UAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                ...state,\n                authenticated: true,\n                user: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Metric/Metric.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/Profile.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/Orders.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/Staff.js",["234","235","236","237","238","239"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenu.js",["240","241","242","243","244"],"import React, { useState } from \"react\";\nimport Content from \"../../../Layout/Content/Content\";\nimport MenuSidebar from \"./MenuSidebar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuCategoriesList from \"./MenuCategoriesList\";\nimport Meal from \"./Meal\";\n\nconst useStyles = makeStyles((theme) => ({\n    dualPanel: {},\n    dualPanelContent: {},\n}));\n\nfunction CompanyMenu() {\n    const classes = useStyles();\n    const [menu, setMenu] = useState({\n        id: 1,\n        name: \"Special Menu\",\n        cover_url: \"https://storage.bucket@firebase.com\",\n        description: \"menu so good, you have to bring you wife\",\n        company: 1,\n        active: false,\n        categories: [\n            {\n                id: 1,\n                name: \"Lunch\",\n                menu_id: 1,\n                created_at: \"2021-01-15T02:01:42.813Z\",\n                updated_at: \"2021-01-15T02:01:42.813Z\",\n            },\n            {\n                id: 2,\n                name: \"BreakFast\",\n                menu_id: 1,\n                created_at: \"2021-01-15T02:01:42.813Z\",\n                updated_at: \"2021-01-15T02:01:42.813Z\",\n            },\n        ],\n    });\n\n    const [dualPanel, setDualPane] = useState(false);\n    const [mealCurrent, setMealCurrent] = useState(null);\n\n    const toggleDualPanel = () => {\n        setDualPane(!dualPanel);\n    };\n\n    const setMeal = (meal) => {\n        console.log(meal);\n        setMealCurrent(meal);\n        setDualPane(true);\n    };\n\n    return (\n        <Content>\n            <Grid container>\n                <Grid item xs={12} md={5} lg={4}>\n                    <MenuSidebar title=\"Company x\">\n                        <div className={classes.dualPanelContent}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.button}\n                                endIcon={<ArrowDropDownIcon />}\n                                fullWidth\n                            >\n                                {menu.name}\n                            </Button>\n                            <div className={classes.dualPanel}>\n                                <MenuCategoriesList\n                                    menuID={menu.id}\n                                    categories={menu.categories}\n                                    dualPanel={dualPanel}\n                                    setMeal={setMeal}\n                                />\n                            </div>\n                        </div>\n                    </MenuSidebar>\n                </Grid>\n                <Grid item xs={12} md={7} lg={8}>\n                    {dualPanel && <Meal meal={mealCurrent} />}\n                </Grid>\n            </Grid>\n        </Content>\n    );\n}\n\nexport default CompanyMenu;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/staffManagementActions.js",["245","246","247","248","249","250"],"import axios from \"axios\";\nimport {\n    ADD_STAFF,\n    CLEAR_CURRENT,\n    LOAD_STAFF,\n    SET_CURRENT,\n    SET_STAFF,\n    DELETE_STAFF,\n    STAFF_ERROR,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    SET_ERRORS,\n    LOADING_DATA,\n} from \"../types\";\n\n//addstaff\nexport const addStaff = (staffData) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/account/create-staff\", staffData)\n        .then((res) => {\n            const staff = res.data;\n            dispatch({ type: ADD_STAFF, payload: staff });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data,\n            });\n        });\n};\n// fetch staff\n\nexport const fetchStaff = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios.get(\"/\");\n};\n\n// get staff by id\n// delete staff\n//addstaff\nexport const deleteStaff = (staffData) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/account/delete-staff\", staffData)\n        .then((res) => {\n            const staff = res.data;\n            dispatch({ type: DELETE_STAFF, payload: staffData });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data,\n            });\n        });\n};\n// edit staff\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Content/Content.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuSidebar.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuCategoriesList.js",["251"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        // maxWidth: 360,\n        display: \"flex\",\n        flexDirection: \"row\",\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    categoriesList: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    mealList: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"15px\",\n    },\n}));\n\nfunction MealItem(props) {\n    // holds the meal item\n    // holds a single category\n    const { meal, onClick } = props;\n    return (\n        <ListItem button={true} onClick={() => onClick(meal)}>\n            <ListItemText primary={meal.name} />\n        </ListItem>\n    );\n}\n\nexport function MenuCategory(props) {\n    // holds a single category\n    const { category, onClick } = props;\n    return (\n        <ListItem button={true} onClick={() => onClick(category.id)}>\n            <ListItemText primary={category.name} />\n        </ListItem>\n    );\n}\n\nfunction MenuCategoriesList(props) {\n    const { categories, dualPanel, menuID, setMeal } = props;\n    const classes = useStyles();\n\n    const [menuState, setMenuState] = useState({\n        currentMenuId: menuID, // eg first menu id\n        currentMenuCategoryID: null, // eg lunch id\n        currentMealID: null, // eg boiled meat id\n        meals: [], // eg array for lunch items\n    });\n\n    const findMenuCategoryItems = (categoryId) => {\n        // searches and returns\n        console.log(\"clicked\");\n        const meals = [\n            {\n                id: 1,\n                name: \"Boiled meat\",\n                price: 200,\n                description: \"Best meat to salivate over\",\n                category_id: 1,\n            },\n            {\n                id: 2,\n                name: \"Boiled meat 2\",\n                price: 200,\n                description: \"Best meat to salivate over\",\n                category_id: 1,\n            },\n        ];\n\n        setMenuState({\n            ...menuState,\n            currentMenuCategoryID: categoryId,\n            currentMealID: meals[0].id,\n            meals: meals,\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.categoriesList}>\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                    {categories.map((category, i) => (\n                        <MenuCategory\n                            category={category}\n                            key={i}\n                            onClick={findMenuCategoryItems}\n                        />\n                    ))}\n                </List>\n                <ListItem button>\n                    <ListItemText primary=\"Add Category\" />\n                </ListItem>\n            </div>\n            {/* meal list */}\n            <div className={classes.mealList}>\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                    {menuState.meals.map((meal, i) => (\n                        <MealItem meal={meal} key={i} onClick={setMeal} />\n                    ))}\n                </List>\n                <ListItem button>\n                    <ListItemText primary=\"Add Meal\" />\n                </ListItem>\n            </div>\n        </div>\n    );\n}\n\nexport default MenuCategoriesList;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/Meal.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App/App.js",["252","253","254"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"../Utils/PrivateRoute\";\nimport jwtDecode from \"jwt-decode\";\n// utils\nimport config from \"../Utils/config\";\n// MUi stuff\n\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { CssBaseline } from \"@material-ui/core\";\n\n// components\n// pages\nimport Dashboard from \"../Components/Pages/Dashboard/Dashboard\";\nimport Login from \"../Components/Pages/Auth/Login/Login\";\nimport Register from \"../Components/Pages/Auth/Register/Register\";\n\nimport axios from \"axios\";\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n// decidin on the backend service to use\naxios.defaults.baseURL = config[\"BACKEND_SERVICE\"];\n\n// checking for jwt\nlet authenticated;\nif (localStorage.token) {\n    const decodeToken = jwtDecode(localStorage.token);\n    if (decodeToken.exp * 1000 < Date.now()) {\n        authenticated = false;\n        // window.location.href = \"/login\";\n    } else {\n        authenticated = true;\n    }\n}\n\nfunction App() {\n    return (\n        <>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n                </Switch>\n            </div>\n            <CssBaseline />\n        </>\n    );\n}\n\nexport default App;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Copyright.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/RouteWithSubRoutes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/PeopleTable.js",["255","256","257"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    add,\n    remove,\n    selectPeople,\n    selectLoading,\n} from \"../People/peopleSlice\";\n// mui stuff\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// components\nimport Content from \"../../Layout/Content/Content\";\nimport PeopleDialog from \"../People/PeopleDialog\";\nimport DeletePeopleDialog from \"../People/DeletePeopleDialog\";\nimport { SummaryCard } from \"../People/Driver\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n// table components\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    deleteButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport default function PeopleTable(props) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n    const rows = useSelector(selectPeople);\n    const loading = useSelector(selectLoading);\n    const error = false;\n    // todo with snacks\n    const [snackOpen, setSnackOpen] = React.useState(false);\n    const dispatch = useDispatch();\n\n    let history = useHistory();\n\n    const { headCells } = props;\n\n    if (loading) {\n        return (\n            <Content>\n                <CircularProgress />\n            </Content>\n        );\n    }\n\n    if (error) return `Error! ${error.message}`;\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const selectTableRow = (id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n    const snackClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setSnackOpen(false);\n    };\n\n    return (\n        <Content>\n            <Snackbar\n                open={snackOpen}\n                autoHideDuration={2000}\n                onClose={snackClose}\n            >\n                <Alert onClose={snackClose} severity=\"success\">\n                    {snackOpen}\n                </Alert>\n            </Snackbar>\n            <div className={classes.root}>\n                <Toolbar>\n                    <div edge=\"start\" className={classes.grow} />\n                    <PeopleDialog\n                        edge=\"end\"\n                        onSave={() => {\n                            setSnackOpen(\"Person added\");\n                        }}\n                        render={(open) => (\n                            <Button\n                                edge=\"end\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                startIcon={<AddIcon />}\n                                onClick={open}\n                            >\n                                Add Person\n                            </Button>\n                        )}\n                    />\n                    {selected.length > 0 && (\n                        <Tooltip title={\"Delete\"}>\n                            <DeletePeopleDialog\n                                ids={selected}\n                                onSave={() => {\n                                    dispatch(remove(selected));\n\n                                    setSnackOpen(\n                                        `${selected.length} Driver${\n                                            selected.length > 1 ? \"s\" : \"\"\n                                        } Deleted`\n                                    );\n                                    setSelected([]);\n                                }}\n                                render={(open) => (\n                                    <Button\n                                        className={classes.deleteButton}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<DeleteIcon />}\n                                        onClick={open}\n                                    >\n                                        {\" \"}\n                                        Delete {selected.length} selected\n                                    </Button>\n                                )}\n                            />\n                        </Tooltip>\n                    )}\n                </Toolbar>\n                <SummaryCard\n                    title={\"Drivers\"}\n                    value={\n                        <>\n                            <TableContainer>\n                                <Table\n                                    className={classes.table}\n                                    aria-labelledby=\"tableTitle\"\n                                    size={\"small\"}\n                                    aria-label=\"enhanced table\"\n                                >\n                                    <EnhancedTableHead\n                                        classes={classes}\n                                        numSelected={selected.length}\n                                        order={order}\n                                        orderBy={orderBy}\n                                        onSelectAllClick={handleSelectAllClick}\n                                        onRequestSort={handleRequestSort}\n                                        rowCount={rows.length}\n                                        headCells={headCells}\n                                    />\n                                    <TableBody>\n                                        {stableSort(\n                                            rows,\n                                            getComparator(order, orderBy)\n                                        )\n                                            .slice(\n                                                page * rowsPerPage,\n                                                page * rowsPerPage + rowsPerPage\n                                            )\n                                            .map((row, index) => {\n                                                const isItemSelected = isSelected(\n                                                    row.id\n                                                );\n                                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                                return (\n                                                    <TableRow\n                                                        hover\n                                                        role=\"checkbox\"\n                                                        aria-checked={\n                                                            isItemSelected\n                                                        }\n                                                        tabIndex={-1}\n                                                        onClick={(e) => {\n                                                            if (\n                                                                e.target\n                                                                    .type ===\n                                                                    \"checkbox\" ||\n                                                                e.target.className.indexOf(\n                                                                    \"Checkbox\"\n                                                                ) > 0\n                                                            ) {\n                                                                return;\n                                                            }\n                                                            history.push(\n                                                                `/people/${row.id}`\n                                                            );\n                                                        }}\n                                                        key={`person-${row.id}`}\n                                                        selected={\n                                                            isItemSelected\n                                                        }\n                                                        style={{\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                    >\n                                                        <TableCell\n                                                            padding=\"checkbox\"\n                                                            onClick={(e) => {\n                                                                selectTableRow(\n                                                                    row.id\n                                                                );\n                                                            }}\n                                                        >\n                                                            <Checkbox\n                                                                checked={\n                                                                    isItemSelected\n                                                                }\n                                                                inputProps={{\n                                                                    \"aria-labelledby\": labelId,\n                                                                }}\n                                                                onChange={(\n                                                                    e\n                                                                ) => {\n                                                                    selectTableRow(\n                                                                        row.id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Avatar\n                                                                alt={row.name}\n                                                                src={row.img}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell\n                                                            component=\"th\"\n                                                            id={labelId}\n                                                            scope=\"row\"\n                                                            padding=\"none\"\n                                                        >\n                                                            {row.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">\n                                                            {row.id}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">\n                                                            {row.trips}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                );\n                                            })}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                component=\"div\"\n                                count={rows.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                            />\n                        </>\n                    }\n                />\n            </div>\n        </Content>\n    );\n}\n\nPeopleTable.propTypes = {\n    headCells: PropTypes.array.isRequired,\n};\n",["258","259"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/EnhancedTableHead.js",["260"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// table components\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n// const headCells = [\n//     {\n//       id: \"avatar\",\n//       numeric: false,\n//       disablePadding: true,\n//       label: \"\",\n//     },\n//     {\n//       id: \"name\",\n//       numeric: false,\n//       disablePadding: true,\n//       label: \"Name\",\n//     },\n//     { id: \"id\", numeric: true, disablePadding: false, label: \"ID\" },\n//     { id: \"trips\", numeric: true, disablePadding: false, label: \"Trips\" },\n//   ];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n        headCells,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.array.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/peopleSlice.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/PeopleDialog.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/Driver.js",["261","262","263","264","265","266","267","268","269","270","271","272"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Content from \"../../Layout/Content/Content\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DriveIcon from \"@material-ui/icons/DriveEta\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\n// import VehiclePie from \"./VehiclePie\";\n// import RevenueLine from \"./RevenueLine\";\nimport PeopleDialog from \"./PeopleDialog\";\nimport { useSelector } from \"react-redux\";\n// import { selectPeople } from \"../ReduxTable/peopleSlice\";\n// import ExpensesTable from \"../Dashboard/ExpensesTable\";\n\nconst useStyles = makeStyles((theme) => ({\n    headerContainer: {\n        position: \"relative\",\n        height: \"100px\",\n    },\n    header: {\n        display: \"flex\",\n        position: \"absolute\",\n        width: \"calc(100%)\",\n        top: \"-70px\",\n        alignItems: \"flex-end\",\n        \"& > *\": {\n            margin: `${theme.spacing(3)}px ${theme.spacing(1)}px`,\n        },\n    },\n    spacer: {\n        flexGrow: \"1\",\n    },\n    avatar: {\n        border: `3px solid white`,\n        width: theme.spacing(13),\n        height: theme.spacing(13),\n        boxShadow: theme.shadows[3],\n    },\n    actionGroup: {\n        display: \"flex\",\n        width: \"330px\",\n        justifyContent: \"space-between\",\n        marginRight: 0,\n    },\n    summaryCards: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    summaryCard: {\n        margin: theme.spacing(1),\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tripCard: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\n\nexport function SummaryCard({ title, value, component }) {\n    const classes = useStyles();\n    return (\n        <Paper elevation={2} className={classes.summaryCard}>\n            <Typography color={\"textSecondary\"} variant=\"h5\" gutterBottom>\n                {title}\n            </Typography>\n            {component || (\n                <Typography color={\"primary\"} variant=\"h3\">\n                    {value}\n                </Typography>\n            )}\n        </Paper>\n    );\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/DeletePeopleDialog.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Login/Login.js",["273"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n//mui stuff\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// components\nimport Copyright from \"../../../Base/Copyright\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../../Redux/actions/authActions\";\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport class Login extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {},\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n\n        this.props.loginUser(userData, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading },\n        } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        // direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Login {this.state.email}\n                            </Typography>\n                            <form\n                                className={classes.form}\n                                noValidate\n                                onSubmit={this.handleSubmit}\n                            >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    helperText={errors.message}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"remember\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    type=\"submit\"\n                                >\n                                    Sign In\n                                    {loading && (\n                                        <CircularProgress\n                                            size={30}\n                                            className={classes.progress}\n                                        />\n                                    )}\n                                </Button>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/register\" variant=\"body2\">\n                                            {\"Don't have an account? Sign Up\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    loginUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Login));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/Register.js",["274","275","276","277","278","279","280","281","282","283"],"import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as Yup from \"yup\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n// formik stuff\nimport { Field } from \"formik\";\nimport { CheckboxWithLabel, TextField } from \"formik-material-ui\";\n\n//mui stuff\n\nimport { Step, StepLabel, Stepper } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// components\nimport Copyright from \"../../../Base/Copyright\";\n\nimport { FormikStepper, FormikStep } from \"./RegisterWizard/FormikStepper\";\n// redux\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../../../Redux/actions/authActions\";\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchemaOwner = Yup.object({\n    firstName: Yup.string().required(\"firstName is required\"),\n    lastName: Yup.string().required(\"lastNaame is required\"),\n    phoneNumber: Yup.string()\n        .min(10, \"must be atleast 10 characters\")\n        .max(15, \"must not exceed 15 characters\")\n        .required(\" Phone Number is required\"),\n    email: Yup.string().email(\"invalid email address\").required(),\n    password: Yup.string()\n        .min(8)\n        .max(200)\n        .matches(/[^A-Za-z0-9]/, \"password must contain a special character\")\n        .matches(/[A-Z]/, \"password must contain an uppercase letter\")\n        .matches(/[a-z]/, \"password must contain a lowercase letter\")\n        .matches(/[0-9]/, \"password must contain a number\")\n        .required(),\n    confirmPassword: Yup.string().oneOf(\n        [Yup.ref(\"password\"), null],\n        \"Passwords must match\"\n    ),\n});\n\nconst validationSchemaCompany = Yup.object({\n    companyName: Yup.string().required(\"companyName is required\"),\n    companyDescription: Yup.string()\n        .max(200, \"must not exceed 200 characters\")\n        .required(\"company description is required\"),\n    companyWebsite: Yup.string().max(200, \"must not exceed 15 characters\"),\n    companyEmail: Yup.string().email(\"invalid companyEmail address\").required(),\n});\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                role: \"owner\",\n            },\n            loading: false,\n            errors: {},\n            owner_id: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.user.password !== this.state.user.confirmPassword) {\n            // raise form error for the fields\n            // return\n            this.setState({\n                errors: \"Passwords must match\",\n            });\n\n            return false;\n        }\n\n        this.props.registerUser(this.state.user, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            user: { ...this.state.user, [e.target.name]: e.target.value },\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading, errors },\n        } = this.props;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Company Register\n                            </Typography>\n                            <FormikStepper\n                                initialValues={{\n                                    firstName: \"\",\n                                    lastName: \"\",\n                                    email: \"\",\n                                    phoneNumber: \"\",\n                                    password: \"\",\n                                    confirmPassword: \"\",\n                                    role: \"owner\",\n                                    companyName: \"\",\n                                    companyEmail: \"\",\n                                    companyDescription: \"\",\n                                    companyWebsite: \"\",\n                                }}\n                                onSubmit={() => {}}\n                            >\n                                <FormikStep\n                                    label=\"personal details\"\n                                    validationSchema={validationSchemaOwner}\n                                >\n                                    <Field\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        label=\"First Name\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                    />\n\n                                    <Field\n                                        name=\"lastName\"\n                                        type=\"text\"\n                                        label=\"Last Name\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                    />\n\n                                    <Field\n                                        name=\"phoneNumber\"\n                                        type=\"text\"\n                                        label=\"PhoneNumber\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                    />\n\n                                    <Field\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                        label=\"Email Address\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        autoFocus\n                                    />\n\n                                    <Field\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        component={TextField}\n                                        fullWidth\n                                        label=\"Password\"\n                                        name=\"password\"\n                                    />\n\n                                    <Field\n                                        name=\"confirmPassword\"\n                                        type=\"password\"\n                                        label=\"Confirm Password\"\n                                        component={TextField}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                </FormikStep>\n\n                                <FormikStep\n                                    label=\"company details\"\n                                    validationSchema={validationSchemaCompany}\n                                >\n                                    <Field\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        label=\"Company Name\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                    />\n\n                                    <Field\n                                        name=\"companyDescription\"\n                                        type=\"text\"\n                                        label=\"Company Website\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                    />\n\n                                    <Field\n                                        name=\"companyWebsite\"\n                                        type=\"text\"\n                                        label=\"Company Website\"\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                        required\n                                    />\n\n                                    <Field\n                                        variant=\"outlined\"\n                                        component={TextField}\n                                        fullWidth\n                                        label=\"CompanyEmail Address\"\n                                        name=\"companyEmail\"\n                                        autoComplete=\"companyEmail\"\n                                        autoFocus\n                                    />\n                                </FormikStep>\n                                <Grid container mt={5}>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/login\" variant=\"body2\">\n                                            {\"Already have an account? Log in\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </FormikStepper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    registerUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Register));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/RegisterWizard/FormikStepper.js",["284","285"],"import React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport { Step, StepLabel, Stepper } from \"@material-ui/core\";\n\n{\n    /* <Button\nfullWidth\nvariant=\"contained\"\ncolor=\"primary\"\ndisabled={loading}\nclassName={classes.submit}\ntype=\"submit\"\n>\nRegister\n{loading && (\n    <CircularProgress\n        size={30}\n        className={classes.progress}\n    />\n)}\n</Button> */\n}\n\nexport function FormikStep({ children, ...props }) {\n    return <>{children}</>;\n}\n\nexport function FormikStepper({ children, ...props }) {\n    const childrenArray = React.Children.toArray(children).slice(0, 2);\n\n    const [step, setStep] = useState(0);\n    const currentChild = childrenArray[step];\n    function isLastStep() {\n        return step == childrenArray.length - 1;\n    }\n    return (\n        <Formik\n            {...props}\n            validationSchema={currentChild.props.validationSchema}\n            onSubmit={async (values, helpers) => {\n                if (isLastStep()) {\n                    await props.onSubmit(values, helpers);\n                } else {\n                    setStep((s) => s + 1);\n                }\n            }}\n        >\n            <Form>\n                <Stepper alternativeLabel activeStep={step}>\n                    {childrenArray.map((child, index) => (\n                        <Step\n                            key={child.props.label}\n                            // completed={step > index || completed}\n                        >\n                            <StepLabel>{child.props.label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                {currentChild}\n\n                {step > 0 ? (\n                    <Button onClick={() => setStep((s) => s - 1)}>Back</Button>\n                ) : null}\n                <Button type=\"submit\">\n                    {isLastStep() ? \"Submit\" : \"Next\"}\n                </Button>\n            </Form>\n        </Formik>\n    );\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/useTable.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Alert.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SummaryCard.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":1,"column":8,"nodeType":"292","messageId":"293","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"295","line":22,"column":1,"nodeType":"296","endLine":41,"endColumn":3},{"ruleId":"290","severity":1,"message":"297","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"298","line":4,"column":25,"nodeType":"292","messageId":"293","endLine":4,"endColumn":35},{"ruleId":"286","replacedBy":"299"},{"ruleId":"288","replacedBy":"300"},{"ruleId":"286","replacedBy":"301"},{"ruleId":"288","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":6,"column":5,"nodeType":"305","messageId":"306","endLine":8,"endColumn":6},{"ruleId":"290","severity":1,"message":"307","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":22,"column":13,"nodeType":"310","messageId":"311","endLine":22,"endColumn":15},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"294","severity":1,"message":"312","line":58,"column":1,"nodeType":"296","endLine":118,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":80,"column":30,"nodeType":"310","messageId":"311","endLine":80,"endColumn":32},{"ruleId":"313","severity":1,"message":"314","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":16},{"ruleId":"290","severity":1,"message":"315","line":3,"column":5,"nodeType":"292","messageId":"293","endLine":3,"endColumn":15},{"ruleId":"290","severity":1,"message":"316","line":26,"column":10,"nodeType":"292","messageId":"293","endLine":26,"endColumn":21},{"ruleId":"290","severity":1,"message":"317","line":106,"column":9,"nodeType":"292","messageId":"293","endLine":106,"endColumn":17},{"ruleId":"290","severity":1,"message":"318","line":110,"column":22,"nodeType":"292","messageId":"293","endLine":110,"endColumn":33},{"ruleId":"290","severity":1,"message":"319","line":117,"column":9,"nodeType":"292","messageId":"293","endLine":117,"endColumn":29},{"ruleId":"290","severity":1,"message":"320","line":128,"column":21,"nodeType":"292","messageId":"293","endLine":128,"endColumn":31},{"ruleId":"290","severity":1,"message":"321","line":132,"column":11,"nodeType":"292","messageId":"293","endLine":132,"endColumn":19},{"ruleId":"290","severity":1,"message":"322","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":20},{"ruleId":"290","severity":1,"message":"323","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":12},{"ruleId":"290","severity":1,"message":"324","line":9,"column":8,"nodeType":"292","messageId":"293","endLine":9,"endColumn":23},{"ruleId":"290","severity":1,"message":"325","line":21,"column":18,"nodeType":"292","messageId":"293","endLine":21,"endColumn":25},{"ruleId":"290","severity":1,"message":"326","line":49,"column":11,"nodeType":"292","messageId":"293","endLine":49,"endColumn":26},{"ruleId":"290","severity":1,"message":"327","line":4,"column":5,"nodeType":"292","messageId":"293","endLine":4,"endColumn":18},{"ruleId":"290","severity":1,"message":"328","line":5,"column":5,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"329","line":6,"column":5,"nodeType":"292","messageId":"293","endLine":6,"endColumn":16},{"ruleId":"290","severity":1,"message":"330","line":7,"column":5,"nodeType":"292","messageId":"293","endLine":7,"endColumn":14},{"ruleId":"290","severity":1,"message":"331","line":9,"column":5,"nodeType":"292","messageId":"293","endLine":9,"endColumn":16},{"ruleId":"290","severity":1,"message":"332","line":50,"column":19,"nodeType":"292","messageId":"293","endLine":50,"endColumn":24},{"ruleId":"290","severity":1,"message":"333","line":49,"column":25,"nodeType":"292","messageId":"293","endLine":49,"endColumn":34},{"ruleId":"290","severity":1,"message":"334","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":26},{"ruleId":"290","severity":1,"message":"335","line":21,"column":7,"nodeType":"292","messageId":"293","endLine":21,"endColumn":12},{"ruleId":"290","severity":1,"message":"336","line":37,"column":9,"nodeType":"292","messageId":"293","endLine":37,"endColumn":22},{"ruleId":"290","severity":1,"message":"297","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"337","line":6,"column":5,"nodeType":"292","messageId":"293","endLine":6,"endColumn":8},{"ruleId":"290","severity":1,"message":"338","line":13,"column":10,"nodeType":"292","messageId":"293","endLine":13,"endColumn":17},{"ruleId":"286","replacedBy":"339"},{"ruleId":"288","replacedBy":"340"},{"ruleId":"290","severity":1,"message":"297","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"341","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":19},{"ruleId":"290","severity":1,"message":"342","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":15},{"ruleId":"290","severity":1,"message":"343","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":24},{"ruleId":"290","severity":1,"message":"344","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":14},{"ruleId":"290","severity":1,"message":"345","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":12},{"ruleId":"290","severity":1,"message":"346","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":17},{"ruleId":"290","severity":1,"message":"347","line":9,"column":8,"nodeType":"292","messageId":"293","endLine":9,"endColumn":18},{"ruleId":"290","severity":1,"message":"348","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":16},{"ruleId":"290","severity":1,"message":"349","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":14},{"ruleId":"290","severity":1,"message":"350","line":14,"column":8,"nodeType":"292","messageId":"293","endLine":14,"endColumn":14},{"ruleId":"290","severity":1,"message":"351","line":17,"column":8,"nodeType":"292","messageId":"293","endLine":17,"endColumn":20},{"ruleId":"290","severity":1,"message":"316","line":18,"column":10,"nodeType":"292","messageId":"293","endLine":18,"endColumn":21},{"ruleId":"290","severity":1,"message":"352","line":3,"column":18,"nodeType":"292","messageId":"293","endLine":3,"endColumn":28},{"ruleId":"290","severity":1,"message":"297","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"352","line":5,"column":18,"nodeType":"292","messageId":"293","endLine":5,"endColumn":28},{"ruleId":"290","severity":1,"message":"353","line":9,"column":10,"nodeType":"292","messageId":"293","endLine":9,"endColumn":27},{"ruleId":"290","severity":1,"message":"354","line":13,"column":10,"nodeType":"292","messageId":"293","endLine":13,"endColumn":14},{"ruleId":"290","severity":1,"message":"355","line":13,"column":16,"nodeType":"292","messageId":"293","endLine":13,"endColumn":25},{"ruleId":"290","severity":1,"message":"356","line":13,"column":27,"nodeType":"292","messageId":"293","endLine":13,"endColumn":34},{"ruleId":"290","severity":1,"message":"349","line":15,"column":8,"nodeType":"292","messageId":"293","endLine":15,"endColumn":14},{"ruleId":"290","severity":1,"message":"343","line":24,"column":8,"nodeType":"292","messageId":"293","endLine":24,"endColumn":24},{"ruleId":"290","severity":1,"message":"357","line":152,"column":19,"nodeType":"292","messageId":"293","endLine":152,"endColumn":26},{"ruleId":"290","severity":1,"message":"358","line":152,"column":28,"nodeType":"292","messageId":"293","endLine":152,"endColumn":34},{"ruleId":"359","severity":1,"message":"360","line":6,"column":1,"nodeType":"361","messageId":"362","endLine":23,"endColumn":2},{"ruleId":"308","severity":1,"message":"309","line":35,"column":21,"nodeType":"310","messageId":"311","endLine":35,"endColumn":23},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'withRouter' is defined but never used.",["363"],["364"],["363"],["364"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Unexpected default export of anonymous function","@typescript-eslint/no-unused-vars","'HomeIcon' is defined but never used.","'LOADING_UI' is defined but never used.","'useSelector' is defined but never used.","'addStaff' is assigned a value but never used.","'setFilterFn' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Typography' is defined but never used.","'Icon' is defined but never used.","'ArrowDropUpIcon' is defined but never used.","'setMenu' is assigned a value but never used.","'toggleDualPanel' is assigned a value but never used.","'CLEAR_CURRENT' is defined but never used.","'LOAD_STAFF' is defined but never used.","'SET_CURRENT' is defined but never used.","'SET_STAFF' is defined but never used.","'STAFF_ERROR' is defined but never used.","'staff' is assigned a value but never used.","'dualPanel' is assigned a value but never used.","'Component' is defined but never used.","'theme' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'add' is defined but never used.","'lighten' is defined but never used.",["363"],["364"],"'useParams' is defined but never used.","'Content' is defined but never used.","'CircularProgress' is defined but never used.","'Avatar' is defined but never used.","'Chip' is defined but never used.","'DriveIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'PeopleDialog' is defined but never used.","'RouterLink' is defined but never used.","'CheckboxWithLabel' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Stepper' is defined but never used.","'loading' is assigned a value but never used.","'errors' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]