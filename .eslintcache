[{"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js":"1","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App.js":"2","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Home.js":"3","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Dashboard.js":"4","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/Navbar.js":"5","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/RouteWithSubRoutes.js":"6","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js":"7","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Login/Login.js":"8","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Register/Register.js":"9","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Landing/Landing.js":"10","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js":"11","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/PrivateRoute.js":"12","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/index.js":"13","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/store.js":"14","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/authReducer.js":"15","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/types.js":"16","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/uiReducer.js":"17","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/actions/authActions.js":"18","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/config.js":"19","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js":"20","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/AppBarAndDrawer/AppBarAndDrawer.js":"21","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js":"22","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js":"23","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/helpers.ts":"24","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/dashboard.routes.ts":"25","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Staff/Staff.js":"26","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/CompanyMenu/CompanyMenu.js":"27","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Orders/Orders.js":"28","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Profile/Profile.js":"29","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Metric/Metric.js":"30","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Main.js":"31"},{"size":757,"mtime":1613556585920,"results":"32","hashOfConfig":"33"},{"size":1854,"mtime":1614166639214,"results":"34","hashOfConfig":"33"},{"size":781,"mtime":1606319971776,"results":"35","hashOfConfig":"36"},{"size":1505,"mtime":1614176333663,"results":"37","hashOfConfig":"33"},{"size":885,"mtime":1606319984480,"results":"38","hashOfConfig":"33"},{"size":454,"mtime":1606306570088,"results":"39","hashOfConfig":"33"},{"size":619,"mtime":1606308316169,"results":"40","hashOfConfig":"36"},{"size":8244,"mtime":1613647293889,"results":"41","hashOfConfig":"33"},{"size":12033,"mtime":1613655034065,"results":"42","hashOfConfig":"33"},{"size":855,"mtime":1607510280016,"results":"43","hashOfConfig":"33"},{"size":362,"mtime":1606296899356,"results":"44","hashOfConfig":"33"},{"size":621,"mtime":1614166937590,"results":"45","hashOfConfig":"33"},{"size":161,"mtime":1607594448215,"results":"46","hashOfConfig":"33"},{"size":389,"mtime":1607120432898,"results":"47","hashOfConfig":"33"},{"size":682,"mtime":1608211716993,"results":"48","hashOfConfig":"33"},{"size":559,"mtime":1607614206703,"results":"49","hashOfConfig":"33"},{"size":703,"mtime":1613655370787,"results":"50","hashOfConfig":"33"},{"size":1540,"mtime":1613828035196,"results":"51","hashOfConfig":"33"},{"size":338,"mtime":1607507293148,"results":"52","hashOfConfig":"33"},{"size":726,"mtime":1613645974975,"results":"53","hashOfConfig":"33"},{"size":7295,"mtime":1614174028511,"results":"54","hashOfConfig":"33"},{"size":918,"mtime":1613840522490,"results":"55","hashOfConfig":"33"},{"size":464,"mtime":1613840522494,"results":"56","hashOfConfig":"33"},{"size":520,"mtime":1614169501425,"results":"57","hashOfConfig":"33"},{"size":1405,"mtime":1614173969706,"results":"58","hashOfConfig":"33"},{"size":101,"mtime":1614176621986,"results":"59","hashOfConfig":"33"},{"size":108,"mtime":1613829253179,"results":"60","hashOfConfig":"33"},{"size":104,"mtime":1614176602434,"results":"61","hashOfConfig":"33"},{"size":107,"mtime":1614176610066,"results":"62","hashOfConfig":"33"},{"size":110,"mtime":1614176594930,"results":"63","hashOfConfig":"33"},{"size":833,"mtime":1614176751376,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"wph79w",{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vxspiw",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js",[],["138","139"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App.js",["140","141","142","143","144","145"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./utils.js/PrivateRoute\";\nimport jwtDecode from \"jwt-decode\";\n// utils\nimport config from \"./utils.js/config\";\n// MUi stuff\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { CssBaseline } from \"@material-ui/core\";\n\n// components\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\n// pages\nimport Landing from \"./components/pages/Landing/Landing\";\nimport Login from \"./components/pages/Login/Login\";\nimport Register from \"./components/pages/Register/Register\";\n\nimport axios from \"axios\";\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n// decidin on the backend service to use\naxios.defaults.baseURL = config[\"BACKEND_SERVICE\"];\n\n// checking for jwt\nlet authenticated;\nif (localStorage.token) {\n    const decodeToken = jwtDecode(localStorage.token);\n    if (decodeToken.exp * 1000 < Date.now()) {\n        authenticated = false;\n        // window.location.href = \"/login\";\n    } else {\n        authenticated = true;\n    }\n}\n\nfunction App() {\n    return (\n        <>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <PrivateRoute\n                        exact\n                        path=\"/dashboard\"\n                        component={Dashboard}\n                    />\n                </Switch>\n            </div>\n            <CssBaseline />\n        </>\n    );\n}\n\nexport default App;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Home.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Dashboard.js",["146"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/Navbar.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/RouteWithSubRoutes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Login/Login.js",["147","148"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Appicon from \"../../../images/logo.png\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n//mui stuff\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../redux/actions/authActions\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://wissensof.com/\">\n                Wissenpos\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport class Login extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {},\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n\n        this.props.loginUser(userData, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading },\n        } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        // direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Login\n                            </Typography>\n                            <form\n                                className={classes.form}\n                                noValidate\n                                onSubmit={this.handleSubmit}\n                            >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    helperText={errors.message}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"remember\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    type=\"submit\"\n                                >\n                                    Sign In\n                                    {loading && (\n                                        <CircularProgress\n                                            size={30}\n                                            className={classes.progress}\n                                        />\n                                    )}\n                                </Button>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/register\" variant=\"body2\">\n                                            {\"Don't have an account? Sign Up\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    loginUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Login));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Register/Register.js",["149","150"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n//mui stuff\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../../redux/actions/authActions\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://wissensof.com/\">\n                Wissenpos\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                role: \"owner\",\n            },\n            loading: false,\n            errors: {},\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.user.password !== this.state.user.confirmPassword) {\n            // raise form error for the fields\n            // return\n            this.setState({\n                errors: \"Passwords must match\",\n            });\n\n            return false;\n        }\n\n        this.props.registerUser(this.state.user, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            user: { ...this.state.user, [e.target.name]: e.target.value },\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading, errors },\n        } = this.props;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        // direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Register\n                            </Typography>\n                            <form\n                                className={classes.form}\n                                noValidate\n                                onSubmit={this.handleSubmit}\n                            >\n                                <TextField\n                                    id=\"firstName\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    type=\"text\"\n                                    label=\"First Name\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.firstName}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    id=\"lastName\"\n                                    margin=\"normal\"\n                                    name=\"lastName\"\n                                    type=\"text\"\n                                    label=\"Last Name\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.lastName}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    id=\"phoneNumber\"\n                                    margin=\"normal\"\n                                    name=\"phoneNumber\"\n                                    type=\"text\"\n                                    label=\"PhoneNumber\"\n                                    inputProps={{\n                                        minLength: 10,\n                                        maxLength: 15,\n                                    }}\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.phoneNumber}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.user.email}\n                                    onChange={this.handleChange}\n                                    helperText={errors.message}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    inputProps={{ minLength: 8 }}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.password}\n                                    onChange={this.handleChange}\n                                />\n\n                                <TextField\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    type=\"password\"\n                                    label=\"Confirm Password\"\n                                    inputProps={{ minLength: 8 }}\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.confirmPassword}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"remember\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    type=\"submit\"\n                                >\n                                    Register\n                                    {loading && (\n                                        <CircularProgress\n                                            size={30}\n                                            className={classes.progress}\n                                        />\n                                    )}\n                                </Button>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/login\" variant=\"body2\">\n                                            {\"Already have an account? Log in\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    registerUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Register));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Landing/Landing.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/PrivateRoute.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/index.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/store.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/authReducer.js",["151"],"import {\n    SET_USER,\n    LOADING_UI,\n    SET_AUTHENTICATED,\n    SET_UAUTHENTICATED,\n} from \"../types\";\n\nconst initialState = {\n    user: null,\n    authenticated: false,\n};\n\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true,\n            };\n        case SET_UAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                ...state,\n                authenticated: true,\n                user: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/types.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/uiReducer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/actions/authActions.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/config.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js",["152"],"import React, { useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, blueGrey } from \"@material-ui/core/colors\";\n\nconst defaultTheme = {\n    palette: {\n        primary: blue,\n        secondary: blueGrey, //ss,\n        //type: \"dark\",\n    },\n    typography: {\n        fontFamily: \"'Oxanium', cursive;\",\n    },\n    status: {\n        danger: \"orange\",\n    },\n};\n\nexport function useTheme() {\n    const [currentTheme, setCurrentTheme] = useState({\n        palette: {\n            primary: blue,\n            secondary: blueGrey,\n        },\n    });\n    const muiTheme = createMuiTheme({\n        ...defaultTheme,\n        ...currentTheme,\n    });\n    return [muiTheme, setCurrentTheme];\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/AppBarAndDrawer/AppBarAndDrawer.js",["153","154","155"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport PalettePicker from \"../../../Theme/PalettePicker\";\nexport const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    logo: {\n        color: \"white\",\n        textDecoration: \"none\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            backgroundColor: `#${theme.palette.primary[300].substring(1)}77`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    active: {\n        backgroundColor: theme.palette.action.selected,\n    },\n}));\n\nfunction ResponsiveDrawer(props) {\n    const { container, setCurrentTheme, currentTheme, routes } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const { pathname } = useLocation();\n    const isHome = false; // pathname === \"/\";\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    /* Modifying the source code from the template example to use the react router pathname hook to set\n  selected prop and to use the react router component prop */\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {routes.map(({ text, icon, path, component }, index) => (\n                    <ListItem\n                        component={RouterLink}\n                        selected={pathname === `/${text}`}\n                        to={`${path}`}\n                        button\n                        key={text}\n                    >\n                        {/* <ListItemIcon>{<icon />}</ListItemIcon> */}\n                        <ListItemText primary={text.toUpperCase()} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <div\n                style={{\n                    height: \"64px\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"cover\",\n                    filter: \"contrast(75%)\",\n                    backgroundImage: \"url(/img/wallpaper.jpeg)\",\n                    position: \"absolute\",\n                    top: \"0px\",\n                    width: \"100%\",\n                    zIndex: -2,\n                }}\n            />\n            <AppBar position=\"sticky\" className={isHome ? \"\" : classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        to={\"/\"}\n                        component={RouterLink}\n                        className={classes.logo}\n                    >\n                        Material World\n                    </Typography>\n                    <div style={{ flexGrow: 1 }}></div>\n                    <PalettePicker\n                        setCurrentTheme={setCurrentTheme}\n                        currentTheme={currentTheme}\n                    />\n                    <Badge badgeContent={4} color=\"primary\">\n                        <MailIcon />\n                    </Badge>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"end\"\n                        onClick={handleDrawerToggle}\n                    >\n                        <Avatar src=\"/img/driver.png\" />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            {isHome && !mobileOpen ? (\n                <div />\n            ) : (\n                <nav aria-label=\"mailbox folders\">\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={container}\n                            variant=\"temporary\"\n                            anchor={\n                                theme.direction === \"rtl\" ? \"right\" : \"left\"\n                            }\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open={isHome}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n            )}\n        </div>\n    );\n}\n\nResponsiveDrawer.propTypes = {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    container: PropTypes.instanceOf(\n        typeof Element === \"undefined\" ? Object : Element\n    ),\n};\n\nexport default ResponsiveDrawer;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js",["156"],"import {\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n} from \"@material-ui/core/colors\";\r\n\r\nexport default [\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n];\r\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/helpers.ts",["157"],"import dashboardRoutes, {\n\tcompanyRoutes\n} from './dashboard.routes';\n\nexport interface CompanyResponse{\n    name:string;\n    owner_id: number;\n}\n\nexport interface UserResponse {\n\tid: number;\n\tfirst_name: string;\n\tlast_name: string;\n\temail: string;\n\trole: string;\n    company?:CompanyResponse\n}\n\n\nexport default function getDashboardRoutes(role:string):any[]{\n\t// TODO make sure not other user type accesses this\t\n    if(role == \"owner\"){\n        return companyRoutes;\n    }else{\n        return dashboardRoutes;\n    }\n}\n",["158","159"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/dashboard.routes.ts",["160"],"// admin routes\n\n// owner routes\n\n// staff routes\n\n// mui stuff\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\n//pages company\nimport Staff from \"../Company/Staff/Staff\";\nimport CompanyMenu from \"../Company/CompanyMenu/CompanyMenu\";\nimport Orders from \"../Company/Orders/Orders\";\nimport Profile from \"../Company/Profile/Profile\";\nimport Metric from \"../Company/Metric/Metric\";\n\nconst dashboardRoutes = [\n    {\n        path: \"/\",\n    },\n];\n\nexport const companyRoutes = [\n    {\n        path: \"/metrics\",\n        component: Metric,\n        text: \"metrics\",\n        icon: DataUsageIcon,\n    },\n    {\n        path: \"/staff-management\",\n        component: Staff,\n        text: \"staff-management\",\n        icon: GroupIcon,\n    },\n    {\n        path: \"/menu\",\n        component: CompanyMenu,\n        text: \"menu\",\n        icon: BusinessIcon,\n    },\n    {\n        path: \"/orders\",\n        component: Orders,\n        text: \"orders\",\n        icon: ShoppingBasketIcon,\n    },\n    {\n        path: \"/profile\",\n        component: Profile,\n        text: \"profile\",\n        icon: PersonIcon,\n    },\n];\n\nexport default dashboardRoutes;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Staff/Staff.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/CompanyMenu/CompanyMenu.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Orders/Orders.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Profile/Profile.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Company/Metric/Metric.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Main.js",["161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"170","line":9,"column":27,"nodeType":"168","messageId":"169","endLine":9,"endColumn":43},{"ruleId":"166","severity":1,"message":"171","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":15},{"ruleId":"166","severity":1,"message":"173","line":23,"column":7,"nodeType":"168","messageId":"169","endLine":23,"endColumn":12},{"ruleId":"166","severity":1,"message":"174","line":39,"column":9,"nodeType":"168","messageId":"169","endLine":39,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":26,"column":8,"nodeType":"177","endLine":26,"endColumn":10,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"179","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":15},{"ruleId":"166","severity":1,"message":"180","line":4,"column":18,"nodeType":"168","messageId":"169","endLine":4,"endColumn":28},{"ruleId":"166","severity":1,"message":"181","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"180","line":4,"column":18,"nodeType":"168","messageId":"169","endLine":4,"endColumn":28},{"ruleId":"166","severity":1,"message":"182","line":3,"column":5,"nodeType":"168","messageId":"169","endLine":3,"endColumn":15},{"ruleId":"166","severity":1,"message":"183","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"184","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"185","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":20},{"ruleId":"166","severity":1,"message":"186","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":12},{"ruleId":"187","severity":1,"message":"188","line":22,"column":1,"nodeType":"189","endLine":41,"endColumn":3},{"ruleId":"190","severity":1,"message":"191","line":22,"column":13,"nodeType":"192","messageId":"193","endLine":22,"endColumn":15},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"194","severity":1,"message":"195","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":6,"column":5,"nodeType":"198","messageId":"199","endLine":8,"endColumn":6},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'MuiThemeProvider' is defined but never used.","'Navbar' is defined but never used.","'Landing' is defined but never used.","'theme' is assigned a value but never used.","'authenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'role'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'Appicon' is defined but never used.","'RouterLink' is defined but never used.","'axios' is defined but never used.","'LOADING_UI' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'ListItemIcon' is defined but never used.","'Icon' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'HomeIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [role]",{"range":"205","text":"206"},[744,746],"[role]"]