[{"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js":"1","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js":"2","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js":"3","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js":"4","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js":"5","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/store.js":"6","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/PrivateRoute.js":"7","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Dashboard.js":"8","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Navbar.js":"9","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Landing/Landing.js":"10","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/config.js":"11","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Main.js":"12","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/authActions.js":"13","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/AppBarAndDrawer/AppBarAndDrawer.js":"14","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/helpers.ts":"15","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/index.js":"16","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/types.js":"17","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/staffReducer.js":"18","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/dashboard.routes.ts":"19","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/uiReducer.js":"20","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/authReducer.js":"21","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Metric/Metric.js":"22","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/Profile.js":"23","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/Orders.js":"24","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/Staff.js":"25","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenu.js":"26","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/staffManagementActions.js":"27","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Content/Content.js":"28","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuSidebar.js":"29","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App/App.js":"30","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Copyright.js":"31","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/RouteWithSubRoutes.js":"32","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/EnhancedTableHead.js":"33","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/peopleSlice.js":"34","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/PeopleDialog.js":"35","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/Driver.js":"36","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/DeletePeopleDialog.js":"37","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Login/Login.js":"38","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/RegisterWizard/FormikStepper.js":"39","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/useTable.js":"40","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Alert.js":"41","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SummaryCard.js":"42","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffProfile.js":"43","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Home.js":"44","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/theme.js":"45","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenuContainer.js":"46","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyForm.js":"47","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/companyActions.js":"48","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Loader.js":"49","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/companyReducer.js":"50","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyCard.js":"51","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/UserCard.js":"52","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/menuReducer.js":"53","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/SimpleRegister/Register.js":"54","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/SimpleRegister/CompanyRegistration.js":"55","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuForm.js":"56","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/FormikDialog.js":"57","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/index.js":"58","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/RadioGroup.js":"59","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Input.js":"60","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Button.js":"61","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Select.js":"62","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Checkbox.js":"63","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/DatePicker.js":"64","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/ActionButton.js":"65","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/menuActions.js":"66","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/AddMealSideBar.js":"67","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MealPreview.js":"68","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/ViewMenuContainer.js":"69","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuCategoriesList.js":"70","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MealList.js":"71","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/CategoryModal.js":"72","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/EditMealContainer.js":"73","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/MealForm.js":"74","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Hooks/useStorage.js":"75","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/firebase.js":"76","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/ProgressBar.js":"77","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/uploadButton.js":"78","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/DeleteDialog.js":"79","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/VerticonOptions.js":"80","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuButton.js":"81","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SingleFieldForm.js":"82","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/QRCard.js":"83","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuCategory.js":"84","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/formateDate.js":"85","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/orderReducer.js":"86","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderTable.js":"87","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/orderAction.js":"88","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderDetail.js":"89","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/UserCardForm.js":"90","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/UploadButton.js":"91","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/ProgressBarImages.js":"92","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Hooks/useImageHandler.js":"93","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/formatDate.js":"94","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyEditForm.js":"95","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderSummary.js":"96","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffTable.js":"97","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffEditForm.js":"98","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffCreate.js":"99","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffActions.js":"100","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffSummary.js":"101"},{"size":761,"mtime":1615814635073,"results":"102","hashOfConfig":"103"},{"size":573,"mtime":1616805220464,"results":"104","hashOfConfig":"103"},{"size":362,"mtime":1606296899356,"results":"105","hashOfConfig":"103"},{"size":918,"mtime":1613840522490,"results":"106","hashOfConfig":"103"},{"size":562,"mtime":1617889804434,"results":"107","hashOfConfig":"103"},{"size":389,"mtime":1607120432898,"results":"108","hashOfConfig":"103"},{"size":621,"mtime":1615133231310,"results":"109","hashOfConfig":"103"},{"size":1680,"mtime":1619950942375,"results":"110","hashOfConfig":"103"},{"size":885,"mtime":1606319984480,"results":"111","hashOfConfig":"103"},{"size":855,"mtime":1607510280016,"results":"112","hashOfConfig":"113"},{"size":338,"mtime":1607507293148,"results":"114","hashOfConfig":"103"},{"size":1661,"mtime":1619975541723,"results":"115","hashOfConfig":"103"},{"size":2876,"mtime":1628342057186,"results":"116","hashOfConfig":"103"},{"size":7586,"mtime":1620033043087,"results":"117","hashOfConfig":"103"},{"size":520,"mtime":1614169501425,"results":"118","hashOfConfig":"103"},{"size":372,"mtime":1619606383936,"results":"119","hashOfConfig":"103"},{"size":2650,"mtime":1620055035637,"results":"120","hashOfConfig":"103"},{"size":2014,"mtime":1628415541223,"results":"121","hashOfConfig":"103"},{"size":2209,"mtime":1618771189368,"results":"122","hashOfConfig":"103"},{"size":1100,"mtime":1628343699128,"results":"123","hashOfConfig":"103"},{"size":961,"mtime":1619954565273,"results":"124","hashOfConfig":"103"},{"size":2944,"mtime":1618771605040,"results":"125","hashOfConfig":"103"},{"size":6995,"mtime":1619965250042,"results":"126","hashOfConfig":"103"},{"size":1225,"mtime":1620055857882,"results":"127","hashOfConfig":"103"},{"size":2955,"mtime":1628416338756,"results":"128","hashOfConfig":"103"},{"size":2544,"mtime":1620033892217,"results":"129","hashOfConfig":"103"},{"size":2454,"mtime":1628336467590,"results":"130","hashOfConfig":"103"},{"size":1621,"mtime":1620033148127,"results":"131","hashOfConfig":"103"},{"size":1126,"mtime":1619951455698,"results":"132","hashOfConfig":"103"},{"size":2314,"mtime":1620058827274,"results":"133","hashOfConfig":"103"},{"size":457,"mtime":1615328522083,"results":"134","hashOfConfig":"103"},{"size":971,"mtime":1615822275720,"results":"135","hashOfConfig":"113"},{"size":3166,"mtime":1615207366842,"results":"136","hashOfConfig":"113"},{"size":2066,"mtime":1615207590717,"results":"137","hashOfConfig":"113"},{"size":1476,"mtime":1628256046826,"results":"138","hashOfConfig":"103"},{"size":2477,"mtime":1615133933908,"results":"139","hashOfConfig":"113"},{"size":1485,"mtime":1615737000127,"results":"140","hashOfConfig":"103"},{"size":8012,"mtime":1620057640294,"results":"141","hashOfConfig":"103"},{"size":1754,"mtime":1616803496383,"results":"142","hashOfConfig":"103"},{"size":7981,"mtime":1615807690409,"results":"143","hashOfConfig":"103"},{"size":1790,"mtime":1616805655427,"results":"144","hashOfConfig":"103"},{"size":886,"mtime":1619958442862,"results":"145","hashOfConfig":"103"},{"size":10316,"mtime":1628256163138,"results":"146","hashOfConfig":"103"},{"size":791,"mtime":1615724389548,"results":"147","hashOfConfig":"113"},{"size":1219,"mtime":1620033583102,"results":"148","hashOfConfig":"103"},{"size":502,"mtime":1616627163376,"results":"149","hashOfConfig":"103"},{"size":5743,"mtime":1616805406161,"results":"150","hashOfConfig":"103"},{"size":1985,"mtime":1628337901242,"results":"151","hashOfConfig":"103"},{"size":372,"mtime":1616794791556,"results":"152","hashOfConfig":"103"},{"size":764,"mtime":1619965713010,"results":"153","hashOfConfig":"103"},{"size":4017,"mtime":1619963544585,"results":"154","hashOfConfig":"103"},{"size":3876,"mtime":1619961197343,"results":"155","hashOfConfig":"103"},{"size":4136,"mtime":1619527813445,"results":"156","hashOfConfig":"103"},{"size":9763,"mtime":1620578557650,"results":"157","hashOfConfig":"103"},{"size":8700,"mtime":1620578664250,"results":"158","hashOfConfig":"103"},{"size":3080,"mtime":1616900544421,"results":"159","hashOfConfig":"103"},{"size":1790,"mtime":1616884209135,"results":"160","hashOfConfig":"103"},{"size":395,"mtime":1616882638822,"results":"161","hashOfConfig":"103"},{"size":793,"mtime":1615736010503,"results":"162","hashOfConfig":"103"},{"size":365,"mtime":1615736010433,"results":"163","hashOfConfig":"103"},{"size":782,"mtime":1615736009486,"results":"164","hashOfConfig":"103"},{"size":1116,"mtime":1620033116528,"results":"165","hashOfConfig":"103"},{"size":953,"mtime":1615736009897,"results":"166","hashOfConfig":"103"},{"size":955,"mtime":1615736010208,"results":"167","hashOfConfig":"103"},{"size":858,"mtime":1616884189692,"results":"168","hashOfConfig":"103"},{"size":8831,"mtime":1628338035109,"results":"169","hashOfConfig":"103"},{"size":1858,"mtime":1617216259274,"results":"170","hashOfConfig":"103"},{"size":4383,"mtime":1618754963738,"results":"171","hashOfConfig":"103"},{"size":4362,"mtime":1618758971303,"results":"172","hashOfConfig":"103"},{"size":3325,"mtime":1618771899637,"results":"173","hashOfConfig":"103"},{"size":1845,"mtime":1620033556155,"results":"174","hashOfConfig":"103"},{"size":4387,"mtime":1617227304792,"results":"175","hashOfConfig":"103"},{"size":4393,"mtime":1620034003326,"results":"176","hashOfConfig":"103"},{"size":6548,"mtime":1620033517316,"results":"177","hashOfConfig":"103"},{"size":988,"mtime":1619959795676,"results":"178","hashOfConfig":"103"},{"size":708,"mtime":1620568203849,"results":"179","hashOfConfig":"103"},{"size":885,"mtime":1617328716709,"results":"180","hashOfConfig":"103"},{"size":1268,"mtime":1618751117795,"results":"181","hashOfConfig":"103"},{"size":2233,"mtime":1617892399316,"results":"182","hashOfConfig":"103"},{"size":1208,"mtime":1617889925219,"results":"183","hashOfConfig":"103"},{"size":4586,"mtime":1619528046814,"results":"184","hashOfConfig":"103"},{"size":3151,"mtime":1617888914614,"results":"185","hashOfConfig":"103"},{"size":654,"mtime":1617924570013,"results":"186","hashOfConfig":"103"},{"size":4051,"mtime":1618082767774,"results":"187","hashOfConfig":"103"},{"size":127,"mtime":1618751504676,"results":"188","hashOfConfig":"103"},{"size":1335,"mtime":1620055113274,"results":"189","hashOfConfig":"103"},{"size":12626,"mtime":1619977568042,"results":"190","hashOfConfig":"103"},{"size":2467,"mtime":1620055780555,"results":"191","hashOfConfig":"103"},{"size":5556,"mtime":1619981542461,"results":"192","hashOfConfig":"103"},{"size":6046,"mtime":1619960905067,"results":"193","hashOfConfig":"103"},{"size":1217,"mtime":1619956110206,"results":"194","hashOfConfig":"103"},{"size":831,"mtime":1619956575783,"results":"195","hashOfConfig":"103"},{"size":795,"mtime":1619956326205,"results":"196","hashOfConfig":"103"},{"size":127,"mtime":1619956916226,"results":"197","hashOfConfig":"103"},{"size":5955,"mtime":1619965162998,"results":"198","hashOfConfig":"103"},{"size":1915,"mtime":1628416747611,"results":"199","hashOfConfig":"103"},{"size":16209,"mtime":1628415665008,"results":"200","hashOfConfig":"103"},{"size":6295,"mtime":1628418150389,"results":"201","hashOfConfig":"103"},{"size":6100,"mtime":1628256792385,"results":"202","hashOfConfig":"103"},{"size":577,"mtime":1628251459133,"results":"203","hashOfConfig":"103"},{"size":1985,"mtime":1628416761183,"results":"204","hashOfConfig":"103"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},"1kfo5l7",{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"207"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},"ds186k",{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"207"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"207"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"207"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"243"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"207"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"207"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"207"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"286"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"207"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"207"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"207"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"207"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"207"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"207"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"207"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"207"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"207"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"207"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"207"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"207"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"207"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"207"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"207"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"207"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"207"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"207"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"207"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"207"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"207"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"207"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"207"},"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js",[],["449","450"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js",[],["451","452"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/store.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/PrivateRoute.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Dashboard.js",["453","454"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// components\nimport Main from \"./Main\";\n\nimport AppBarAndDrawer from \"../../Layout/AppBarAndDrawer/AppBarAndDrawer\";\n\n// helpers\nimport getDashboardRoutes from \"./helpers\";\n\n//redux\nimport { connect } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useTheme } from \"../../../Theme/theme\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n}));\n\nfunction Dashboard(props) {\n    const [currentTheme, setCurrentTheme] = useTheme();\n    const {\n        user: { role },\n        match: { path },\n        authenticated,\n        location,\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <ThemeProvider theme={currentTheme}>\n                <AppBarAndDrawer\n                    currentTheme={currentTheme}\n                    setCurrentTheme={setCurrentTheme}\n                    routes={getDashboardRoutes(role)}\n                    matchPath={path}\n                />\n\n                <Main\n                    routes={getDashboardRoutes(role)}\n                    matchPath={path}\n                    authenticated={authenticated}\n                    {...props}\n                />\n            </ThemeProvider>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    authenticated: state.auth.authenticated,\n});\n\nDashboard.propTypes = {\n    user: PropTypes.object.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Navbar.js",[],["455","456"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Landing/Landing.js",[],["457","458"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/config.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/Main.js",["459","460"],"import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Content from \"../../Layout/Content/Content\";\nimport { logoutUser } from \"../../../Redux/actions/authActions\";\nimport store from \"../../../Redux/store\";\n\nexport class Main extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    goHome = () => {\n        console.log(\n            `${this.props.location.pathname}/${this.props.routes[2].path}`\n        );\n\n        // /dashboard/menus\n        this.props.history.push({\n            pathname: `${this.props.matchPath}/${this.props.routes[1].path}`,\n        });\n    };\n\n    componentDidMount() {\n        this.goHome();\n    }\n\n    render() {\n        const { matchPath, routes, location, authenticated } = this.props;\n        return (\n            <Content>\n                <Route\n                    path={`${matchPath}/:id`} // equivalent /dashboard/menu menu is the dynamic part\n                    render={(props) => {\n                        if (!authenticated) {\n                            store.dispatch(logoutUser());\n                            return;\n                        }\n\n                        let page = routes.find((p) => {\n                            return p.text === props.match.params.id;\n                        });\n\n                        return (\n                            <page.component\n                                routes={page.routes !== null ? page.routes : []}\n                                {...props}\n                            />\n                        );\n                    }}\n                />\n            </Content>\n        );\n    }\n}\n\nexport default Main;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/authActions.js",["461"],"import {\n    SET_ERRORS,\n    SET_UNAUTHENTICATED,\n    SET_SUCCESS,\n    SET_USER,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    UPDATE_PROFILE,\n} from \"../types\";\nimport axios from \"axios\";\nimport { loadCompany } from \"./companyActions\";\nimport { setErrors } from \"./staffManagementActions\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/accounts/login\", userData)\n        .then((res) => {\n            setAuthorizationHeader(res.data.token);\n\n            const promises = [\n                dispatch(setUserData(res.data.user)),\n                dispatch(loadCompany()),\n            ];\n\n            return Promise.allSettled(promises);\n        })\n        .then(() => {\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `welcome back`,\n            });\n\n            history.push(\"/dashboard\");\n        })\n        .catch((err) => {\n            console.log(\"Auth Erros\", err);\n            dispatch(setErrors(err));\n        });\n};\n\nexport const registerUser = (userData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/accounts/register-owner\", userData)\n        .then((res) => {\n            setAuthorizationHeader(res.data.token);\n\n            dispatch(setUserData(res.data.user));\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `account ${res.data.user.email} created successfully`,\n            });\n            dispatch({ type: CLEAR_ERRORS });\n            history.push(\"/company-registration\");\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// update user profile\nexport const updateUserProfile =\n    ({ userID, userData }) =>\n    (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .put(`/accounts/${userID}`, userData)\n            .then((res) => {\n                dispatch({ type: UPDATE_PROFILE, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `Account updated successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\nconst setUserData = (user) => (dispatch) => {\n    dispatch({\n        type: SET_USER,\n        payload: user,\n    });\n};\n\nconst setAuthorizationHeader = (token) => {\n    const _token = `Bearer ${token}`;\n    localStorage.setItem(\"token\", _token);\n    axios.defaults.headers.common[\"Authorization\"] = _token;\n};\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem(\"token\");\n    localStorage.clear(); // will fix jwt decode error\n    delete axios.defaults.headers.common[\"Authorization\"];\n    dispatch({ type: SET_UNAUTHENTICATED });\n    window.location.href = \"/\";\n};\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/AppBarAndDrawer/AppBarAndDrawer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/helpers.ts",["462"],"import dashboardRoutes, {\n\tcompanyRoutes\n} from './dashboard.routes';\n\nexport interface CompanyResponse{\n    name:string;\n    owner_id: number;\n}\n\nexport interface UserResponse {\n\tid: number;\n\tfirst_name: string;\n\tlast_name: string;\n\temail: string;\n\trole: string;\n    company?:CompanyResponse\n}\n\n\nexport default function getDashboardRoutes(role:string):any[]{\n\t// TODO make sure not other user type accesses this\t\n    if(role == \"owner\"){\n        return companyRoutes;\n    }else{\n        return dashboardRoutes;\n    }\n}\n",["463","464"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/index.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/types.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/staffReducer.js",["465","466"],"import {\n    ADD_STAFF,\n    CLEAR_CURRENT,\n    LOAD_STAFF,\n    SET_CURRENT,\n    SET_STAFF,\n    DELETE_STAFF,\n    STAFF_ERROR,\n    UPDATE_STAFF,\n} from \"../types\";\n\nconst initialState = {\n    staff: [],\n\n    currentStaff: null,\n    loading: false,\n    error: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_STAFF:\n            return {\n                ...state,\n                staff: action.payload,\n                loading: true,\n            };\n        case SET_STAFF:\n            return {\n                ...state,\n                staff: action.payload,\n                loading: false,\n            };\n        case ADD_STAFF:\n            return {\n                ...state,\n                staff: [action.payload, ...state.staff],\n            };\n        case UPDATE_STAFF:\n            return {\n                ...state,\n                staff: state.staff.map((staff) =>\n                    staff.id == action.payload.id ? action.payload : staff\n                ),\n                loading: false,\n            };\n        case DELETE_STAFF:\n            return {\n                ...state,\n                // staff: [\n                //     ...state.staff.filter(\n                //         (staff) => staff.id !== action.payload\n                //     ),\n                // ],\n\n                staff: [\n                    ...state.staff.filter((person) => {\n                        return !action.payload.includes(person.id);\n                    }),\n                ],\n                loading: false,\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                currentStaff: action.payload,\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                currentStaff: null,\n            };\n        case STAFF_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Dashboard/dashboard.routes.ts",["467"],"// admin routes\n\n// owner routes\n\n// staff routes\n\n// mui stuff\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\n//pages company\nimport Staff from \"../Company/Staff/Staff\";\nimport StaffProfile from \"../Company/Staff/StaffProfile\";\nimport CompanyMenuContainer from \"../Company/CompanyMenu/CompanyMenuContainer\";\nimport Orders from \"../Company/Orders/Orders\";\nimport Profile from \"../Company/Profile/Profile\";\nimport Metric from \"../Company/Metric/Metric\";\nimport CompanyMenu from \"../Company/CompanyMenu/CompanyMenu\";\n// import AddRecipe from \"../Company/CompanyMenu/AddRecipe\";\n\nconst dashboardRoutes = [\n    {\n        path: \"/\",\n    },\n];\n\nexport const companyRoutes = [\n    {\n        path: \"reports\",\n        component: Metric,\n        text: \"reports\",\n        icon: DataUsageIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"staff-management\",\n        component: Staff,\n        text: \"staff-management\",\n        icon: GroupIcon,\n        layout:\"/company\",\n        routes:[\n            {\n                path: \":id/profile\",\n                component: StaffProfile\n               \n            }\n        ]\n    },\n    {\n        path: \"menus\",\n        component: CompanyMenuContainer,\n        text: \"menus\",\n        icon: BusinessIcon,\n        layout:\"/company\",\n\n        routes:[\n            {\n                path:\"\",\n                text: \"menus\",\n                component: CompanyMenu\n            },\n            // {\n            //     path: \"add-recipe\",\n            //     text:\"add-recipe\",\n            //     component: AddRecipe\n               \n            // }\n        ]\n    },\n    {\n        path: \"orders\",\n        component: Orders,\n        text: \"orders\",\n        icon: ShoppingBasketIcon,\n        layout:\"/company\"\n    },\n    {\n        path: \"profile\",\n        component: Profile,\n        text: \"profile\",\n        icon: PersonIcon,\n        layout:\"/company\"\n    },\n];\n\nexport default dashboardRoutes;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/uiReducer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/authReducer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Metric/Metric.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/Profile.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/Orders.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/Staff.js",["468","469","470"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StaffSummaryCards from \"./StaffSummary\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Content from \"../../../Layout/Content/Content\";\nimport { connect } from \"react-redux\";\nimport {\n    addStaff,\n    deleteStaff,\n    fetchStaff,\n} from \"../../../../Redux/actions/staffManagementActions\";\nimport StaffTable from \"./StaffTable\";\nimport StaffProfile from \"./StaffProfile\";\nimport { first } from \"lodash\";\nimport { isEmpty, isLoaded } from \"react-redux-firebase\";\nimport Loader from \"../../../Base/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n    deleteButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nfunction Staff(props) {\n    const classes = useStyles();\n\n    const { company, addStaff, deleteStaff, fetchStaff } = props;\n\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: \"\",\n        subTitle: \"\",\n    });\n\n    const [openPopup, setOpenPopup] = useState(false);\n    const [record, setRecord] = useState(null);\n\n    const onDelete = (ids) => {\n        // deleted selected drivers\n        // handleDelete(ids, job_id);\n        console.log(ids);\n    };\n\n    // modal for driver data\n    const openInPopup = (rider) => {\n        setRecord(rider);\n        setOpenPopup(true);\n    };\n\n    return (\n        <Content>\n            {!isLoaded(company) ? (\n                <Loader />\n            ) : (\n                <>\n                    <StaffSummaryCards />\n                    <StaffTable\n                        openInPopup={openInPopup}\n                        company={company}\n                        onDelete={onDelete}\n                        confirmDialog={confirmDialog}\n                        setConfirmDialog={setConfirmDialog}\n                        handleCreateStaff={addStaff}\n                    />\n                    {record && (\n                        <StaffProfile\n                            record={record}\n                            openPopup={openPopup}\n                            setOpenPopup={setOpenPopup}\n                            setRecord={setRecord}\n                            handleDelete={deleteStaff}\n                            handleSuspend={props.suspendUser}\n                        />\n                    )}\n                </>\n            )}\n        </Content>\n    );\n}\n\nStaff.propTypes = {\n    addStaff: PropTypes.func.isRequired,\n    deleteStaff: PropTypes.func.isRequired,\n    staff: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        company: first(state.company.company),\n    };\n};\n\nconst mapActionsToProps = {\n    addStaff,\n    deleteStaff,\n    fetchStaff,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Staff);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenu.js",["471"],"import React, { useState, useEffect } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport {\n    loadMenu,\n    editMealCategory,\n    addMealCategory,\n} from \"../../../../Redux/actions/menuActions\";\nimport Loader from \"../../../Base/Loader\";\nimport ViewMenuContainer from \"./ViewMeal/ViewMenuContainer\";\nimport EditMenuContainer from \"./EditMeal/EditMealContainer\";\n\nconst useStyles = makeStyles((theme) => ({\n    dualPanel: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    content: {\n        flexGrow: 1,\n    },\n    menuContainer: {\n        height: \"100vh\",\n        display: \"flex\",\n        // position: \"fixed\",\n        // [theme.breakpoints.up(\"sm\")]: {\n        //     width: `calc(100% - ${drawerWidth}px)`,\n        //     marginLeft: drawerWidth,\n        // },\n        // paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        position: \"relative\",\n    },\n}));\n\nfunction CompanyMenu(props) {\n    const classes = useStyles();\n    const [toggleMenuView, setToogleMenuView] = useState(false);\n\n    const {\n        ui: { loading },\n        loadMenu,\n        Menu: { menu: companyMenu },\n        company: { company },\n    } = props;\n\n    const { url } = useRouteMatch();\n\n    /* eslint-disable eqeqeq */\n    useEffect(() => {\n        if (companyMenu == null) {\n            loadMenu(company[0].id);\n        } else {\n            return;\n        }\n    }, []);\n\n    if (loading) {\n        <Loader />;\n    }\n\n    return (\n        <div className={classes.menuContainer}>\n            {toggleMenuView == true ? (\n                <EditMenuContainer\n                    title={company[0].name}\n                    companyID={company[0].id}\n                    menuID={companyMenu.id}\n                    setToogleMenuView={setToogleMenuView}\n                />\n            ) : (\n                <ViewMenuContainer\n                    company={company}\n                    companyMenu={companyMenu}\n                    url={url}\n                    toggleMenuView={toggleMenuView}\n                    setToogleMenuView={setToogleMenuView}\n                />\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n    company: state.company,\n    Menu: state.menu,\n});\n\nconst mapActionsToProps = {\n    loadMenu,\n    addMealCategory,\n    editMealCategory,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(CompanyMenu);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/staffManagementActions.js",["472","473","474","475","476"],"import axios from \"axios\";\nimport {\n    ADD_STAFF,\n    CLEAR_CURRENT,\n    LOAD_STAFF,\n    SET_CURRENT,\n    SET_STAFF,\n    DELETE_STAFF,\n    STAFF_ERROR,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    SET_ERRORS,\n    LOADING_DATA,\n    SET_SUCCESS,\n} from \"../types\";\n\n//addstaff\nexport const addStaff =\n    ({ staffData, closeModal }) =>\n    (dispatch) => {\n        console.log(staffData.company_id);\n        dispatch({ type: LOADING_UI });\n\n        const url = `/company/${staffData.company_id}/accounts`;\n\n        axios\n            .post(url, staffData)\n            .then((res) => {\n                const staff = res.data;\n                closeModal();\n                dispatch({ type: ADD_STAFF, payload: staff });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${staffData.user.firstName} created successfully`,\n                });\n            })\n            .catch((err) => {\n                console.log(err, \"Staff create error\");\n                dispatch(setErrors(err));\n            });\n    };\n\n// fetch staff\nexport const fetchStaff = (company_id) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n\n    const url = `/company/${company_id}/accounts`;\n\n    axios\n        .get(url)\n        .then((res) => {\n            const payload = res.data;\n            dispatch({ type: LOAD_STAFF, payload });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `Accounts fetched successfully`,\n            });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// get staff by id\n\n// edit staff\nexport const editStaff = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios.get(\"/\");\n};\n\n// delete staff\nexport const deleteStaff = (staffData) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/account/delete-staff\", staffData)\n        .then((res) => {\n            const staff = res.data;\n            dispatch({ type: DELETE_STAFF, payload: staffData });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// helper function\nexport const setErrors = (err) => (dispatch) => {\n    if (err.response) {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data,\n        });\n    } else {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err,\n        });\n    }\n};\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Layout/Content/Content.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuSidebar.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App/App.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Copyright.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/RouteWithSubRoutes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/EnhancedTableHead.js",["477"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// table components\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n// const headCells = [\n//     {\n//       id: \"avatar\",\n//       numeric: false,\n//       disablePadding: true,\n//       label: \"\",\n//     },\n//     {\n//       id: \"name\",\n//       numeric: false,\n//       disablePadding: true,\n//       label: \"Name\",\n//     },\n//     { id: \"id\", numeric: true, disablePadding: false, label: \"ID\" },\n//     { id: \"trips\", numeric: true, disablePadding: false, label: \"Trips\" },\n//   ];\n\nfunction EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n        headCells,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n    headCells: PropTypes.array.isRequired,\n};\n\nexport default EnhancedTableHead;\n",["478","479"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/peopleSlice.js",[],["480","481"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/PeopleDialog.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/Driver.js",["482","483","484","485","486","487","488","489","490","491","492","493"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Content from \"../../Layout/Content/Content\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DriveIcon from \"@material-ui/icons/DriveEta\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\n// import VehiclePie from \"./VehiclePie\";\n// import RevenueLine from \"./RevenueLine\";\nimport PeopleDialog from \"./PeopleDialog\";\nimport { useSelector } from \"react-redux\";\n// import { selectPeople } from \"../ReduxTable/peopleSlice\";\n// import ExpensesTable from \"../Dashboard/ExpensesTable\";\n\nconst useStyles = makeStyles((theme) => ({\n    headerContainer: {\n        position: \"relative\",\n        height: \"100px\",\n    },\n    header: {\n        display: \"flex\",\n        position: \"absolute\",\n        width: \"calc(100%)\",\n        top: \"-70px\",\n        alignItems: \"flex-end\",\n        \"& > *\": {\n            margin: `${theme.spacing(3)}px ${theme.spacing(1)}px`,\n        },\n    },\n    spacer: {\n        flexGrow: \"1\",\n    },\n    avatar: {\n        border: `3px solid white`,\n        width: theme.spacing(13),\n        height: theme.spacing(13),\n        boxShadow: theme.shadows[3],\n    },\n    actionGroup: {\n        display: \"flex\",\n        width: \"330px\",\n        justifyContent: \"space-between\",\n        marginRight: 0,\n    },\n    summaryCards: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    summaryCard: {\n        margin: theme.spacing(1),\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tripCard: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n}));\n\nexport function SummaryCard({ title, value, component }) {\n    const classes = useStyles();\n    return (\n        <Paper elevation={2} className={classes.summaryCard}>\n            <Typography color={\"textSecondary\"} variant=\"h5\" gutterBottom>\n                {title}\n            </Typography>\n            {component || (\n                <Typography color={\"primary\"} variant=\"h3\">\n                    {value}\n                </Typography>\n            )}\n        </Paper>\n    );\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/People/DeletePeopleDialog.js",[],["494","495"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Login/Login.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/RegisterWizard/FormikStepper.js",["496"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Table/useTable.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Alert.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SummaryCard.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffProfile.js",["497","498","499","500","501"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Content from \"../../../Layout/Content/Content\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DriveIcon from \"@material-ui/icons/SportsMotorsports\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport SummaryCard from \"../../../Base/SummaryCard\";\n// import VehiclePie from \"./VehiclePie\";\n// import RevenueLine from \"./RevenueLine\";\n// import ExpensesTable from \"../Dashboard/ExpensesTable\";\n// import PeopleDialog from \"./PeopleDialog\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { get } from \"lodash\";\nimport PeopleDialog from \"../../../Base/DeleteDialog\";\nimport PeopleEditDialog from \"../../../Base/People/PeopleDialog\";\nimport { Dialog } from \"@material-ui/core\";\nimport StaffEditForm from \"./StaffEditForm\";\n// import DriverSuspendActions from \"./DriverSuspendActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    headerContainer: {\n        position: \"relative\",\n        height: \"100px\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    header: {\n        display: \"flex\",\n        position: \"absolute\",\n        width: \"calc(100%)\",\n        top: \"-70px\",\n        alignItems: \"flex-end\",\n        \"& > *\": {\n            margin: `${theme.spacing(3)}px ${theme.spacing(1)}px`,\n        },\n    },\n    spacer: {\n        flexGrow: \"1\",\n    },\n    avatar: {\n        border: `3px solid white`,\n        width: theme.spacing(13),\n        height: theme.spacing(13),\n        boxShadow: theme.shadows[3],\n    },\n    actionGroup: {\n        display: \"flex\",\n        width: \"330px\",\n        justifyContent: \"space-between\",\n        marginRight: 0,\n    },\n    summaryCards: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    summaryCard: {\n        margin: theme.spacing(1),\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tripCard: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: \"flex\",\n        overflow: \"auto\",\n        flexDirection: \"column\",\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction StaffProfile(props) {\n    /* eslint-disable no-unused-vars */\n    const classes = useStyles();\n    const {\n        record,\n        openPopup,\n        setOpenPopup,\n        setRecord,\n        handleDelete,\n        handleEdit,\n        handleSuspend,\n    } = props;\n\n    const handleClose = () => {\n        setOpenPopup(false);\n        setRecord(null);\n    };\n\n    console.log(record);\n\n    return (\n        <>\n            {record && (\n                <Dialog\n                    fullScreen\n                    open={openPopup}\n                    onClose={handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton\n                                edge=\"start\"\n                                color=\"inherit\"\n                                onClick={handleClose}\n                                aria-label=\"close\"\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {record.user_id}{\" \"}\n                                {/* {record.value.last_name}{\" \"}\n                                {record.current_proposal_status_id} */}\n                            </Typography>\n                            <Button\n                                autoFocus\n                                color=\"inherit\"\n                                onClick={handleClose}\n                            >\n                                Close\n                            </Button>\n                        </Toolbar>\n                    </AppBar>\n                    <Content>\n                        <div\n                            style={{\n                                height: \"200px\",\n                                backgroundPosition: \"center\",\n                                backgroundSize: \"cover\",\n                                filter: \"contrast(75%)\",\n                                backgroundImage: \"url(/img/wallpaper.jpeg)\",\n                            }}\n                        />\n                        <div className={classes.headerContainer}>\n                            <div className={classes.header}>\n                                <Avatar\n                                    alt={record.firstName}\n                                    src={\"\"}\n                                    classes={{\n                                        root: classes.avatar,\n                                        circle: classes.circle,\n                                    }}\n                                />\n                                <Typography variant={\"h5\"}>\n                                    {record.firstName}\n                                </Typography>\n                                <Chip\n                                    variant={\"outlined\"}\n                                    icon={<DriveIcon />}\n                                    label=\"Staff\"\n                                />\n                                <Rating name=\"read-only\" value={4.3} readOnly />\n                                <div className={classes.spacer} />\n                                <div className={classes.actionGroup}>\n                                    <PeopleEditDialog\n                                        title=\"Edit Staff\"\n                                        render={(open) => (\n                                            <Button\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                startIcon={<EditIcon />}\n                                                onClick={open}\n                                            >\n                                                Edit\n                                            </Button>\n                                        )}\n                                    >\n                                        <StaffEditForm\n                                            record={record}\n                                            closeModal={handleClose}\n                                        />\n                                    </PeopleEditDialog>\n\n                                    {/* <DriverSuspendActions\n                                        record={record}\n                                        closeModal={handleClose}\n                                        handleSuspend={handleSuspend}\n                                    /> */}\n                                    <PeopleDialog\n                                        onSave={() => {\n                                            handleDelete({\n                                                id: record.user_id,\n                                                closeModal: handleClose,\n                                            });\n                                        }}\n                                        title=\"Delete Staff\"\n                                        content={`This action is not reversible. Are you sure you wish delete ${record.firstName} to proceed ?`}\n                                        render={(open) => (\n                                            <Button\n                                                color=\"primary\"\n                                                variant=\"outlined\"\n                                                startIcon={<DeleteIcon />}\n                                                onClick={open}\n                                            >\n                                                Delete\n                                            </Button>\n                                        )}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {/* <div className={classes.summaryCards}>\n                            <SummaryCard title={\"Revenue\"} value={\"$\" + fare} />\n                            <SummaryCard title={\"Trips\"} value={trips} />\n                            <SummaryCard title={\"Miles\"} value={distance} />\n                            <SummaryCard title={\"Rating\"} value={4.32} />\n                        </div> */}\n                        {/* <div className={classes.summaryCards}>\n                            <SummaryCard\n                                title=\"Last 30 Days\"\n                                component={<RevenueLine />}\n                            />\n                            <SummaryCard\n                                title=\"By Vehicle\"\n                                component={<VehiclePie />}\n                            />\n                        </div>\n                        <SummaryCard\n                            title={\"Recent expenses\"}\n                            component={<ExpensesTable />}\n                        /> */}\n                    </Content>\n                </Dialog>\n            )}\n        </>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => {};\n\nStaffProfile.propTypes = {\n    ui: PropTypes.object.isRequired,\n    openInPopup: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(StaffProfile);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Home.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/theme.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/CompanyMenuContainer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyForm.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/companyActions.js",["502"],"import {\n    SET_ERRORS,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    LOAD_COMPANY,\n    ADD_COMPANY,\n    EDIT_COMPANY,\n    SET_SUCCESS,\n} from \"../types\";\nimport axios from \"axios\";\nimport { setErrors } from \"./staffManagementActions\";\n\nexport const loadCompany = () => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .get(\"/company/mine\")\n        .then((res) => {\n            dispatch({ type: LOAD_COMPANY, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `company fetched successfully`,\n            });\n\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\nexport const registerCompany = (companyData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(\"/company\", companyData)\n        .then((res) => {\n            dispatch({ type: ADD_COMPANY, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `${companyData.name} created successfully`,\n            });\n            dispatch({ type: CLEAR_ERRORS });\n            history.push(\"/dashboard\");\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\nexport const updateCompany =\n    ({ id, companyData }) =>\n    (dispatch) => {\n        dispatch({ type: LOADING_UI });\n        console.log(\"hereeeeeeeeeeeeeee\");\n\n        axios\n            .patch(`/company/${id}`, companyData)\n            .then((res) => {\n                dispatch({ type: EDIT_COMPANY, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} updated successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n// set current\n// clear current\n// delete company soon enough\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/Loader.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/companyReducer.js",["503"],"import { LOAD_COMPANY, ADD_COMPANY, EDIT_COMPANY } from \"../types\";\n\nconst initialState = {\n    company: null,\n    currentCompany: null,\n};\n\nconst company = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_COMPANY:\n        case ADD_COMPANY:\n            return {\n                ...state,\n                company: action.payload,\n            };\n        case EDIT_COMPANY:\n            return {\n                ...state,\n                company: state.company.map((company) =>\n                    company.id == action.payload.id\n                        ? { ...company, ...action.payload }\n                        : company\n                ),\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default company;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyCard.js",["504"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport BankIcon from \"@material-ui/icons/AccountBalance\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport { blue, green, pink } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n\n    depositContext: {\n        flex: 1,\n    },\n    pink: {\n        color: theme.palette.getContrastText(pink[500]),\n        backgroundColor: pink[500],\n    },\n    blue: {\n        color: theme.palette.getContrastText(blue[500]),\n        backgroundColor: blue[500],\n    },\n    green: {\n        color: theme.palette.getContrastText(blue[500]),\n        backgroundColor: green[500],\n    },\n}));\n\nfunction CompanyCard(props) {\n    const classes = useStyles();\n    const {\n        company: { name, description, logo_url, website_url, id, email },\n        setEditCompany,\n    } = props;\n\n    return (\n        <>\n            <>\n                <CardActionArea>\n                    <CardHeader\n                        onClick={() => setEditCompany(true)}\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.green}\n                                src={logo_url}\n                            />\n                        }\n                        action={\n                            <IconButton aria-label=\"settings\">\n                                <EditIcon />\n                            </IconButton>\n                        }\n                    />\n                    <CardContent>\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                        >\n                            {description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.blue}\n                            >\n                                <BankIcon />\n                            </Avatar>\n                        }\n                        title=\"Company Name\"\n                        subheader={name}\n                    />\n                </CardActionArea>\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.green}\n                            >\n                                <SpeedIcon />\n                            </Avatar>\n                        }\n                        title={\"Company Email\"}\n                        subheader={email}\n                    />\n                </CardActionArea>\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.blue}\n                            >\n                                <BankIcon />\n                            </Avatar>\n                        }\n                        title=\"Company Website\"\n                        subheader={website_url}\n                    />\n                </CardActionArea>\n            </>\n        </>\n    );\n}\n\nexport default CompanyCard;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/UserCard.js",["505","506"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport BankIcon from \"@material-ui/icons/AccountBalance\";\nimport { IconButton } from \"@material-ui/core\";\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport { blue, green, pink } from \"@material-ui/core/colors\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport formatDate from \"../../../../Utils/formatDate\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n\n    depositContext: {\n        flex: 1,\n    },\n    pink: {\n        color: theme.palette.getContrastText(pink[500]),\n        backgroundColor: pink[500],\n    },\n    blue: {\n        color: theme.palette.getContrastText(blue[500]),\n        backgroundColor: blue[500],\n    },\n    green: {\n        color: theme.palette.getContrastText(blue[500]),\n        backgroundColor: green[500],\n    },\n}));\n\nfunction CompanyCard(props) {\n    const classes = useStyles();\n    const {\n        user: { firstName, lastName, phoneNumber, id, email, isVerified },\n        setEditUser,\n    } = props;\n\n    return (\n        <>\n            <>\n                <CardActionArea>\n                    <CardHeader\n                        onClick={() => setEditUser(true)}\n                        action={\n                            <IconButton aria-label=\"settings\">\n                                <EditIcon />\n                            </IconButton>\n                        }\n                        subheader={`${phoneNumber}`}\n                    />\n                    <CardContent>\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                        >\n                            {firstName} {lastName}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.blue}\n                            >\n                                <BankIcon />\n                            </Avatar>\n                        }\n                        title=\"PhoneNumber\"\n                        subheader={phoneNumber}\n                    />\n                </CardActionArea>\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.green}\n                            >\n                                <SpeedIcon />\n                            </Avatar>\n                        }\n                        title={\"Company Email\"}\n                        subheader={email}\n                    />\n                </CardActionArea>\n\n                <CardActionArea>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"recipe\"\n                                className={classes.blue}\n                            >\n                                <BankIcon />\n                            </Avatar>\n                        }\n                        title=\"Account Verified\"\n                        subheader={isVerified ? \"Verified\" : \"Not Verified\"}\n                    />\n                </CardActionArea>\n            </>\n        </>\n    );\n}\n\nexport default CompanyCard;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/menuReducer.js",["507","508","509"],"import {\n    LOAD_MENU,\n    ADD_MENU,\n    RENAME_MENU,\n    DELETE_MENU,\n    ADD_CATEGORY,\n    RENAME_CATEGORY,\n    DELETE_CATEGORY,\n    SET_CURRENT_CATEGORY,\n    ADD_MEAL,\n    EDIT_MEAL,\n    DELETE_MEAL,\n    CLEAR_CURRENT_MEAL,\n    SET_CURRENT_MEAL,\n    CLEAR_CURRENT_CATEGORY,\n} from \"../types\";\n\nconst initialState = {\n    menu: null,\n    currentMenu: null,\n    currentMeal: null,\n    currentCategory: {\n        items: [],\n    },\n};\n\nconst company = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_MENU:\n        case ADD_MENU:\n            return {\n                ...state,\n                menu: action.payload.length == 0 ? null : action.payload,\n            };\n        case RENAME_MENU:\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    ...action.payload,\n                },\n            };\n        case DELETE_MENU:\n            return {\n                ...state,\n                menu: null,\n                currentMenu: null,\n                currentMeal: null,\n                currentCategory: {\n                    items: [],\n                },\n            };\n        case ADD_CATEGORY:\n            return {\n                ...state,\n                menu: {\n                    ...state.menu,\n                    categories: state.menu.categories.concat(action.payload),\n                },\n            };\n\n        case RENAME_CATEGORY:\n            return {\n                ...state,\n                currentCategory: {\n                    ...state.currentCategory,\n                    ...action.payload,\n                },\n                menu: {\n                    ...state.menu,\n                    categories: state.menu.categories.map((item, index) => {\n                        return action.payload.id == item.id\n                            ? { ...item, ...action.payload }\n                            : item;\n                    }),\n                },\n            };\n\n        case DELETE_CATEGORY:\n            return {\n                ...state,\n                currentCategory: {\n                    items: [],\n                },\n                menu: {\n                    ...state.menu,\n                    categories: state.menu.categories.filter((item, index) => {\n                        return action.payload.id !== item.id;\n                    }),\n                },\n            };\n\n        case ADD_MEAL:\n            return {\n                ...state,\n                currentCategory: {\n                    ...state.currentCategory,\n                    items: state.currentCategory.items.concat(action.payload),\n                },\n            };\n        case DELETE_MEAL:\n            return {\n                ...state,\n                currentCategory: {\n                    ...state.currentCategory,\n                    items: state.currentCategory.items.filter(\n                        (item) => item.id !== action.payload.id\n                    ),\n                },\n            };\n        case EDIT_MEAL:\n            return {\n                ...state,\n                currentCategory: {\n                    ...state.currentCategory,\n                    items: state.currentCategory.items.filter((item, index) => {\n                        return action.payload.id == item.id\n                            ? { ...item, ...action.payload }\n                            : item;\n                    }),\n                },\n            };\n        case SET_CURRENT_MEAL:\n            return {\n                ...state,\n                currentMeal: action.payload,\n            };\n        case CLEAR_CURRENT_MEAL:\n            return {\n                ...state,\n                currentMeal: null,\n            };\n        case CLEAR_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: {\n                    items: [],\n                },\n            };\n        case SET_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default company;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/SimpleRegister/Register.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Auth/Register/SimpleRegister/CompanyRegistration.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MenuForm.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/FormikDialog.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/index.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/RadioGroup.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Input.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Button.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Select.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/Checkbox.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/DatePicker.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Controls/ActionButton.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/menuActions.js",["510"],"import {\n    SET_ERRORS,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    LOAD_MENU,\n    // ADD_MENU,\n    RENAME_MENU,\n    DELETE_MENU,\n    SET_SUCCESS,\n    ADD_CATEGORY,\n    RENAME_CATEGORY,\n    DELETE_CATEGORY,\n    SET_CURRENT_CATEGORY,\n    ADD_MEAL,\n    EDIT_MEAL,\n    DELETE_MEAL,\n    SET_CURRENT_MEAL,\n    CLEAR_CURRENT_MEAL,\n} from \"../types\";\nimport axios from \"axios\";\nimport { setErrors } from \"./staffManagementActions\";\n\nexport const loadMenu = (companyID) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .get(`/company/${companyID}/menu`)\n        .then((res) => {\n            dispatch({ type: LOAD_MENU, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `menu fetched successfully`,\n            });\n\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\nexport const loadMenuByID = (companyID, menuID) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .get(`/company/${companyID}/menu/${menuID}`)\n        .then((res) => {\n            dispatch({ type: LOAD_MENU, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `menu fetched successfully`,\n            });\n\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// create a menu\nexport const createMenu = (companyID, menuData) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .post(`/company/${companyID}/menu`, menuData)\n        .then((res) => {\n            dispatch(loadMenuByID(companyID, res.data.id));\n            // dispatch({ type: ADD_MENU, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `${menuData.name} created successfully`,\n            });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// update menu\nexport const updateMenu = (id, companyID, menuData) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .patch(`/company/${companyID}/menu/${id}`, menuData)\n        .then((res) => {\n            dispatch({ type: RENAME_MENU, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: `${res.data.name} updated successfully`,\n            });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            dispatch(setErrors(err));\n        });\n};\n\n// delte a menu\n\nexport const deleteMenu = (companyID, menuID, setOpenPopUp) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n\n    axios\n        .delete(`/company/${companyID}/menu/${menuID}`)\n        .then((res) => {\n            dispatch({ type: DELETE_MENU, payload: res.data });\n            dispatch({\n                type: SET_SUCCESS,\n                payload: \"menu deleted updated successfully\",\n            });\n            setOpenPopUp(false); // if it was successfull delete\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((err) => {\n            setOpenPopUp(false);\n            dispatch(setErrors(err));\n        });\n};\n\n// add category to a menu\nexport const addCategoryMenu =\n    (companyID, menuID, categoryData) => (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .post(`/company/${companyID}/menu/${menuID}/category`, categoryData)\n            .then((res) => {\n                dispatch({ type: ADD_CATEGORY, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} created successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n// rename category\nexport const renameCategoryMenu =\n    ({ companyID, menuID, categoryData, categoryID }) =>\n    (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .patch(\n                `/company/${companyID}/menu/${menuID}/category/${categoryID}`,\n                categoryData\n            )\n            .then((res) => {\n                dispatch({ type: RENAME_CATEGORY, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} updated successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n// delete category\nexport const deleteCategoryMenu =\n    ({ companyID, menuID, categoryID, history }) =>\n    (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .delete(\n                `/company/${companyID}/menu/${menuID}/category/${categoryID}`\n            )\n            .then((res) => {\n                dispatch({ type: DELETE_CATEGORY, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `category deleted successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n                history.goBack();\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n// create meal for a given category\nexport const addMealCategory =\n    (companyID, menuID, categoryID, mealData) => (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .post(\n                `/company/${companyID}/menu/${menuID}/category/${categoryID}/item`,\n                mealData\n            )\n            .then((res) => {\n                dispatch({ type: ADD_MEAL, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} created successfully`,\n                });\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n//edit meal\nexport const editMealCategory =\n    (companyID, menuID, categoryID, mealID, mealData) => (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .patch(\n                `/company/${companyID}/menu/${menuID}/category/${categoryID}/item/${mealID}`,\n                mealData\n            )\n            .then((res) => {\n                dispatch({ type: EDIT_MEAL, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} updated successfully`,\n                });\n                dispatch(clearCurrentMeal()); // remove current meal from state\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n// load meals for a selected category\nexport const fetchMealsByCategory =\n    (companyID, menuID, categoryID) => (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .get(`/company/${companyID}/menu/${menuID}/category/${categoryID}`)\n            .then((res) => {\n                dispatch({ type: SET_CURRENT_CATEGORY, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: `${res.data.name} meals fetched successfully`,\n                });\n\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                dispatch(setErrors(err));\n            });\n    };\n\n// delte a meal\n\nexport const deleteMeal =\n    ({ companyID, menuID, categoryID, itemID, setDeleteOpen, setMeal }) =>\n    (dispatch) => {\n        dispatch({ type: LOADING_UI });\n\n        axios\n            .delete(\n                `/company/${companyID}/menu/${menuID}/category/${categoryID}/item/${itemID}`\n            )\n            .then((res) => {\n                dispatch({ type: DELETE_MEAL, payload: res.data });\n                dispatch({\n                    type: SET_SUCCESS,\n                    payload: \"meal deleted updated successfully\",\n                });\n                setMeal(null);\n                setDeleteOpen(false); // if it was successfull delete\n                dispatch({ type: CLEAR_ERRORS });\n            })\n            .catch((err) => {\n                setDeleteOpen(false);\n                dispatch(setErrors(err));\n            });\n    };\n\n// set current meal\nexport const setCurrentMeal = (meal) => (dispatch) => {\n    dispatch({\n        type: SET_CURRENT_MEAL,\n        payload: meal,\n    });\n};\n\n// CLEAR current meal\nexport const clearCurrentMeal = () => (dispatch) => {\n    dispatch({\n        type: CLEAR_CURRENT_MEAL,\n    });\n};\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/AddMealSideBar.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/MealPreview.js",["511","512","513"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardHeader, IconButton } from \"@material-ui/core\";\nimport { DeletePopUpDialog } from \"../../../Base/DeleteDialog\";\nimport {\n    setCurrentMeal,\n    deleteMeal,\n} from \"../../../../Redux/actions/menuActions\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../../../../Utils/formateDate\";\nimport VerticonOptions from \"../../../Base/VerticonOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        padding: theme.spacing(3),\n    },\n    media: {\n        height: 240,\n    },\n\n    card: {\n        maxWidth: 945,\n    },\n}));\n\nfunction MealPreview(props) {\n    const classes = useStyles();\n    const {\n        menu: { id, company_id },\n        meal,\n        setToogleMenuView,\n        setMeal,\n        toggleMenuView,\n        setCurrentMeal,\n        deleteMeal,\n    } = props;\n\n    const [editOpen, setEditOpen] = useState(false);\n    const [deleteOpen, setDeleteOpen] = useState(false);\n\n    const handleEditOpen = (close) => {\n        setEditOpen(true);\n        setToogleMenuView(true);\n        setCurrentMeal(meal);\n        close();\n    };\n\n    const handleDeleteDialogOpen = (close) => {\n        setDeleteOpen(true);\n        close();\n    };\n\n    const handleClose = () => {\n        setDeleteOpen(false);\n        setEditOpen(false);\n    };\n\n    const handleMealDelete = () => {\n        console.log(\"deleted\");\n\n        deleteMeal({\n            itemID: meal.id,\n            categoryID: meal.category_id,\n            menuID: id,\n            companyID: company_id,\n            setDeleteOpen,\n            setMeal,\n        });\n    };\n\n    const options = [\n        { name: \"edit\", onClick: handleEditOpen },\n        { name: \"delete\", onClick: handleDeleteDialogOpen },\n    ];\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" component=\"h6\" gutterBottom>\n                {meal.name} {toggleMenuView == true ? \"Edit/Create\" : \"Preview\"}\n            </Typography>\n\n            <Card className={classes.card}>\n                <CardHeader\n                    action={<VerticonOptions options={options} />}\n                    subheader={formatDate(meal.created_at)}\n                />\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={meal.image_url}\n                        title={meal.name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {meal.name}\n                        </Typography>\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                        >\n                            {meal.description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                        price: ksh {meal.price}\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                        Quantity: {meal.quantity}\n                    </Button>\n                </CardActions>\n            </Card>\n\n            <DeletePopUpDialog\n                title={`delete ${meal.name}`}\n                onSave={handleMealDelete}\n                message=\"Are you sure you want to delete this meal, you cannot undo this action?\"\n                open={deleteOpen}\n                handleClose={handleClose}\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    menu: state.menu.menu,\n});\nconst mapActionsToProps = {\n    deleteMeal,\n    setCurrentMeal,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(MealPreview);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/ViewMenuContainer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuCategoriesList.js",["514"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Route } from \"react-router-dom\";\nimport CategoryModal from \"./CategoryModal\";\nimport MenuCategory from \"./MenuCategory\";\nimport MealsList from \"./MealList\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        // maxWidth: 360,\n        display: \"flex\",\n        flexDirection: \"row\",\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    categoriesList: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        overflowY: \"auto\",\n        flex: \"auto\",\n        borderRight: \"3px solid rgb(221, 227, 227)\",\n    },\n    mealList: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"15px\",\n        overflowY: \"auto\",\n        flex: \"auto\",\n    },\n}));\n\n//002\n// holds a single category\n\n// 001 container for the menu categories and their meals\nfunction MenuCategoriesList(props) {\n    const classes = useStyles();\n    const {\n        categories,\n        menuID,\n        companyID,\n        setMeal,\n        setToogleMenuView, // used to trigger add/edit meal sidebar\n        url,\n        addCategoryMenu,\n        meal,\n    } = props;\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.categoriesList}>\n                {/************** category list **************/}\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                    {categories.map((category, index) => (\n                        <MenuCategory\n                            category={category}\n                            key={index}\n                            meal={meal}\n                            to={`${url}/category/${category.id}`}\n                        />\n                    ))}\n                </List>\n\n                {/* ******************category modal**************** */}\n                <CategoryModal\n                    title=\"Add Category\"\n                    addCategoryMenu={addCategoryMenu}\n                    companyID={companyID}\n                    menuID={menuID}\n                    render={(open) => (\n                        <ListItem button onClick={open}>\n                            <ListItemText primary=\"Add Category\" />\n                        </ListItem>\n                    )}\n                />\n            </div>\n\n            {/* ******************meal list *********************/}\n            <div className={classes.mealList}>\n                <Route\n                    path={`${url}/category/:catId`}\n                    render={({ match }) => {\n                        const item = categories.find(\n                            (r) => r.id == match.params.catId\n                        );\n\n                        return (\n                            <MealsList\n                                category={item}\n                                setMeal={setMeal}\n                                setToogleMenuView={setToogleMenuView}\n                            />\n                        );\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default MenuCategoriesList;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MealList.js",["515","516"],"import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { fetchMealsByCategory } from \"../../../../../Redux/actions/menuActions\";\n\n// 003\nfunction MealsList(props) {\n    // holds the meal item\n    // holds a single category\n    const {\n        category,\n        setMeal,\n        meal,\n        setToogleMenuView,\n        fetchMealsByCategory,\n        company,\n        menu: { menu, currentCategory },\n    } = props;\n\n    useEffect(() => {\n        // fetch meals based on category\n        if (category) {\n            fetchMealsByCategory(company[0].id, menu.id, category.id);\n            setMeal(null);\n        }\n    }, [category]);\n\n    return (\n        <>\n            {currentCategory.items.length > 0 &&\n                currentCategory.items.map((m, index) => (\n                    <ListItem\n                        button\n                        onClick={() => {\n                            setMeal(m);\n                        }}\n                        selected={meal && meal.name == m.name}\n                        key={index}\n                    >\n                        <ListItemText primary={m.name} />\n                    </ListItem>\n                ))}\n            <ListItem\n                button\n                variant=\"text\"\n                onClick={() => {\n                    setToogleMenuView(true); // launches edit/add container\n                }}\n            >\n                <ListItemText primary=\"Add Meal+\" />\n            </ListItem>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    company: state.company.company,\n    menu: state.menu,\n});\n\nconst mapActionsToProps = {\n    fetchMealsByCategory,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(MealsList);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/CategoryModal.js",["517"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Controls from \"../../../../Controls\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n// form stuff\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { Grid, Typography, makeStyles } from \"@material-ui/core\";\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required(\"category name is required\"),\n});\n\nexport function CategoryForm(props) {\n    const { handleCategorySubmit } = props;\n    return (\n        <Formik\n            initialValues={{\n                name: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleCategorySubmit}\n        >\n            <Form>\n                <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                        <Field\n                            name=\"name\"\n                            type=\"text\"\n                            label=\"category name\"\n                            component={TextField}\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                        >\n                            Ok\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Form>\n        </Formik>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: \"absolute\",\n        top: theme.spacing(5),\n    },\n    dialogTitle: {\n        paddingRight: \"0px\",\n    },\n}));\n\nexport default function CategoryModal({\n    title,\n    data,\n    render,\n    onSave,\n    menuID,\n    companyID,\n    addCategoryMenu,\n}) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // const handleSave = () => {\n    //     onSave && onSave();\n    //     handleClose();\n    // };\n\n    const handleCategorySubmit = (values, action) => {\n        const categoryData = {\n            ...values,\n            menu_id: menuID,\n        };\n\n        addCategoryMenu(companyID, menuID, categoryData);\n        handleClose();\n    };\n\n    return (\n        <>\n            {render(handleClickOpen)}\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                maxWidth=\"md\"\n            >\n                <DialogTitle\n                    id=\"form-dialog-title\"\n                    className={classes.dialogTitle}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                        }}\n                    >\n                        <Typography\n                            variant=\"h6\"\n                            component=\"div\"\n                            style={{ flexGrow: 1 }}\n                        >\n                            {title}\n                        </Typography>\n                        <Controls.ActionButton\n                            color=\"secondary\"\n                            onClick={handleClose}\n                        >\n                            <CloseIcon />\n                        </Controls.ActionButton>\n                    </div>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <CategoryForm handleCategorySubmit={handleCategorySubmit} />\n                </DialogContent>\n                {/* <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {data ? \"Close\" : \"Cancel\"}\n                    </Button>\n                    <Button onClick={handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions> */}\n            </Dialog>\n        </>\n    );\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/EditMealContainer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/MealForm.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Hooks/useStorage.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/firebase.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/ProgressBar.js",["518"],"import { useEffect } from \"react\";\nimport useStorage from \"../../../../../Hooks/useStorage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n    },\n});\n\nexport default function LinearDeterminate(props) {\n    const classes = useStyles();\n\n    const { file, setFile, setAddMeal, setImageUrl } = props;\n    const { url, progress } = useStorage(file);\n\n    useEffect(() => {\n        if (url) {\n            setFile(null);\n            setImageUrl(url);\n            setAddMeal((prevState) => ({\n                ...prevState,\n                image_url: url,\n            }));\n        }\n    }, [url, setFile]);\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress variant=\"determinate\" value={progress} />\n        </div>\n    );\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/EditMeal/uploadButton.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/DeleteDialog.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/VerticonOptions.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuButton.js",["519"],"import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport VerticonOptions from \"../../../../Base/VerticonOptions\";\nimport SingleFieldModal, {\n    SingleFieldForm,\n} from \"../../../../Base/SingleFieldForm\";\nimport { DeletePopUpDialog } from \"../../../../Base/DeleteDialog\";\nimport QRCard from \"./QRCard\";\n\nimport QrCode from \"qrcode\";\nimport { connect } from \"react-redux\";\nimport {\n    updateMenu,\n    deleteMenu,\n} from \"../../../../../Redux/actions/menuActions\";\nimport Config from \"../../../../../Utils/config\";\n\nimport * as Yup from \"yup\";\nimport { Typography } from \"@material-ui/core\";\nconst validationSchema = Yup.object({\n    name: Yup.string().required(\"category name is required\"),\n});\n\nfunction MenuButton(props) {\n    const { companyMenu, updateMenu, deleteMenu } = props;\n    const [open, setOpen] = React.useState(false);\n\n    const [openPopUp, setOpenPopUp] = React.useState(false);\n    const [openQr, setOpenQr] = React.useState(false);\n    const [imageUrl, setImageUrl] = React.useState(\"\");\n\n    const handleClickOpen = (handleVerticonClose) => {\n        setOpen(true);\n        handleVerticonClose(); //passed up from verticonOptiosn to close  it\n    };\n\n    const handleDeleteDialogOpen = (handleVerticonClose) => {\n        setOpenPopUp(true);\n        handleVerticonClose();\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setOpenPopUp(false);\n        setOpenQr(false);\n    };\n\n    const handleMenuRename = (values, actions) => {\n        //pop up dialog\n        const menuData = { ...values };\n        updateMenu(companyMenu.id, companyMenu.company_id, menuData);\n\n        actions.resetForm();\n        handleClose(); // passed up from verticonOptions\n    };\n\n    const handleMenuDelete = () => {\n        console.log(\"clicked\");\n\n        deleteMenu(companyMenu.company_id, companyMenu.id, setOpenPopUp);\n    };\n\n    const handleQrCodeDialogOpen = async (handleVerticonClose) => {\n        try {\n            handleVerticonClose(true);\n            setOpenQr(true);\n\n            const url = Config[\"BACKEND_SERVICE\"];\n            const menUrl = `${url}/company/${companyMenu.company_id}/menu`; //generate entry url\n            const res = await QrCode.toDataURL(menUrl);\n            setImageUrl(res);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const options = [\n        { name: \"rename menu\", onClick: handleClickOpen },\n        { name: \"delete menu\", onClick: handleDeleteDialogOpen },\n        { name: \"generate QrCode\", onClick: handleQrCodeDialogOpen },\n    ];\n\n    return (\n        <>\n            <Button\n                style={{\n                    borderTop: \".5px solid rgb(221, 227, 227)\",\n                    borderBottom: \".5px solid rgb(221, 227, 227)\",\n                }}\n                color=\"primary\"\n                endIcon={<VerticonOptions options={options} />}\n                fullWidth\n                disableRipple\n            >\n                {companyMenu.name}\n            </Button>\n\n            <SingleFieldModal\n                handleClose={handleClose}\n                title=\"Rename Menu\"\n                open={open}\n            >\n                <SingleFieldForm\n                    handleSubmit={handleMenuRename}\n                    initialValues={{\n                        name: companyMenu.name,\n                    }}\n                    validationSchema={validationSchema}\n                    name=\"name\"\n                    label=\"new name\"\n                />\n            </SingleFieldModal>\n\n            <DeletePopUpDialog\n                title={`delete ${companyMenu.name}`}\n                onSave={handleMenuDelete}\n                message=\"This action cannot be undone, every meal and category will be lost forever...are you sure you wish to proceed?\"\n                open={openPopUp}\n                handleClose={handleClose}\n            />\n\n            <SingleFieldModal\n                handleClose={handleClose}\n                title=\"Click Qr to Download\"\n                open={openQr}\n            >\n                {imageUrl ? (\n                    <a href={imageUrl} download>\n                        <QRCard imageUrl={imageUrl} />\n                    </a>\n                ) : (\n                    <Typography variant=\"h5\" component=\"h6\">\n                        Please wait... generating QrCode\n                    </Typography>\n                )}\n            </SingleFieldModal>\n        </>\n    );\n}\n\nconst mapActionsToProps = {\n    updateMenu,\n    deleteMenu,\n};\n\nexport default connect(null, mapActionsToProps)(MenuButton);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/SingleFieldForm.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/QRCard.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/CompanyMenu/ViewMeal/MenuCategory.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/formateDate.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/reducers/orderReducer.js",["520"],"import {\n    LOAD_ORDERS,\n    LOAD_CART,\n    LOADING_CART,\n    CLEAR_LOADING_CART,\n    CLEAR_CURRENT_ORDER,\n    LOAD_ORDER_STATS,\n} from \"../types\";\n\nconst initialState = {\n    orders: null,\n    pagingInfo: null,\n    filteredOrders: null,\n    currentOrder: null,\n    loading: false,\n    stats: null,\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_ORDERS:\n            return {\n                ...state,\n                orders: action.payload.results,\n                pagingInfo: action.payload.pageInfo,\n            };\n        case LOAD_ORDER_STATS:\n            return {\n                ...state,\n                stats: action.payload,\n            };\n        case LOADING_CART:\n            return {\n                ...state,\n                loading: true,\n            };\n        case LOAD_CART:\n            return {\n                ...state,\n                laoding: false,\n                currentOrder: action.payload,\n            };\n        case CLEAR_CURRENT_ORDER:\n            return {\n                ...state,\n                loading: false,\n                currentOrder: null,\n            };\n        case CLEAR_LOADING_CART:\n            return {\n                ...state,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderTable.js",["521","522","523","524","525"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// mui\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// component\nimport SummaryCard from \"../../../Base/SummaryCard\";\nimport useTable from \"../../../Base/Table/useTable\";\nimport { DeletePopUpDialog as ConfirmDialog } from \"../../../Base/DeleteDialog\";\n// redux\nimport { connect } from \"react-redux\";\nimport { loadOrders, fetchCart } from \"../../../../Redux/actions/orderAction\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n\n    grow: {\n        flexGrow: 0.6,\n        flexShrink: 0.6,\n    },\n    deleteButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst headCells = [\n    {\n        id: \"#order\",\n        numeric: true,\n        disablePadding: false,\n        label: \"#order\",\n    },\n    {\n        id: \"customer\",\n        numeric: false,\n        disablePadding: true,\n        label: \"customer\",\n    },\n\n    {\n        id: \"payment status\",\n        numeric: false,\n        disablePadding: true,\n        label: \"payment\",\n    },\n    {\n        id: \"order status\",\n        numeric: false,\n        disablePadding: true,\n        label: \"order status\",\n    },\n\n    // { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\n    // {\n    //     id: \"phoneNumber\",\n    //     numeric: false,\n    //     disablePadding: false,\n    //     label: \"PhoneNumber\",\n    // },\n    {\n        id: \"date created\",\n        numeric: false,\n        disablePadding: false,\n        label: \"date created\",\n    },\n    { id: \"subtotal\", numeric: true, disablePadding: false, label: \"subtotal\" },\n\n    {\n        id: \"Actions\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Actions\",\n    },\n];\n\nfunction OrderTable(props) {\n    const classes = useStyles();\n\n    const {\n        ui,\n        order: { orders },\n        company,\n        loadOrders,\n        fetchCart,\n    } = props;\n\n    useEffect(() => {\n        loadOrders({\n            companyId: company.id,\n            nextPage: undefined,\n            limit: undefined,\n            order_status: undefined,\n            purchase_status: undefined,\n        });\n    }, []);\n\n    /* eslint-disable no-unused-vars */\n    const [filterFn, setFilterFn] = useState({\n        fn: (items) => {\n            return items;\n        },\n    });\n\n    const {\n        selected,\n        setSelected,\n        selectTableRow,\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n    } = useTable(orders, orders, headCells, filterFn);\n\n    const [snackOpen, setSnackOpen] = React.useState(false);\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: \"\",\n        message: \"\",\n    });\n\n    // TODO: USE WITH ACTIONS EG..DISPATCH ORDER, CANCEL ORDERS ETC\n    // const onDelete = (ids) => {\n    //     // deleted selected proposals\n    //     handleDelete(ids, job_id);\n    // };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n    const snackClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setSnackOpen(false);\n    };\n\n    if (orders == null) {\n        return <SummaryCard title=\"No orders found\" />;\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Toolbar>\n                    <div edge=\"start\" className={classes.grow} />\n\n                    {selected.length > 0 && (\n                        <div>\n                            {/* <DeletePeopleDialog\n                                ids={selected}\n                                onSave={() => {\n                                    // delete user\n                                    onDelete(selected);\n\n                                    setSnackOpen(\n                                        `${selected.length} User${\n                                            selected.length > 1 ? \"s\" : \"\"\n                                        } Deleted`\n                                    );\n                                    setSelected([]);\n                                }}\n                                render={(open) => (\n                                    <Button\n                                        className={classes.deleteButton}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<DeleteIcon />}\n                                        onClick={open}\n                                    >\n                                        {\" \"}\n                                        Delete {selected.length} selected\n                                    </Button>\n                                )}\n                            /> */}\n                        </div>\n                    )}\n                </Toolbar>\n                <SummaryCard\n                    title={\"Orders\"}\n                    value={\n                        <>\n                            <TblContainer>\n                                <TblHead />\n\n                                <TableBody>\n                                    {recordsAfterPagingAndSorting().map(\n                                        (row, index) => {\n                                            const isItemSelected = isSelected(\n                                                row.id\n                                            );\n                                            const labelId = `enhanced-table-checkbox-${index}`;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    role=\"checkbox\"\n                                                    aria-checked={\n                                                        isItemSelected\n                                                    }\n                                                    tabIndex={-1}\n                                                    onClick={(e) => {\n                                                        if (\n                                                            e.target.type ===\n                                                                \"checkbox\" ||\n                                                            e.target.className.indexOf(\n                                                                \"Checkbox\"\n                                                            ) > 0\n                                                        ) {\n                                                            return;\n                                                        }\n                                                        fetchCart({\n                                                            companyID:\n                                                                company.id,\n                                                            cartID: row.cart_id,\n                                                        }); // to open order details card\n                                                    }}\n                                                    key={`order-${row.id}`}\n                                                    selected={isItemSelected}\n                                                    style={{\n                                                        cursor: \"pointer\",\n                                                    }}\n                                                >\n                                                    <TableCell\n                                                        padding=\"checkbox\"\n                                                        onClick={(e) => {\n                                                            selectTableRow(\n                                                                row.id\n                                                            );\n                                                        }}\n                                                    >\n                                                        <Checkbox\n                                                            checked={\n                                                                isItemSelected\n                                                            }\n                                                            inputProps={{\n                                                                \"aria-labelledby\": labelId,\n                                                            }}\n                                                            onChange={(e) => {\n                                                                selectTableRow(\n                                                                    row.id\n                                                                );\n                                                            }}\n                                                        />\n                                                    </TableCell>\n\n                                                    <TableCell\n                                                        component=\"th\"\n                                                        id={labelId}\n                                                        scope=\"row\"\n                                                        // padding=\"none\"\n                                                    >\n                                                        {row.id}\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        customer name\n                                                    </TableCell>\n                                                    <TableCell\n                                                        scope=\"row\"\n                                                        padding=\"none\"\n                                                    >\n                                                        {row.purchase_status}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {row.order_status}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {row.created_at}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {row.subtotal}\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        Actions here\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        }\n                                    )}\n                                </TableBody>\n                            </TblContainer>\n                            <TblPagination />\n                        </>\n                    }\n                />\n\n                <ConfirmDialog\n                    confirmDialog={confirmDialog}\n                    setConfirmDialog={setConfirmDialog}\n                />\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    ui: state.ui,\n    order: state.order,\n    company: state.company.company[0],\n});\n\nconst mapActionsToProps = {\n    loadOrders,\n    fetchCart,\n};\n\nOrderTable.propTypes = {\n    loadOrders: PropTypes.func.isRequired,\n    ui: PropTypes.object.isRequired,\n    order: PropTypes.object.isRequired,\n    company: PropTypes.object.isRequired,\n    fetchCart: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(OrderTable);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Redux/actions/orderAction.js",["526","527"],"import {\n    SET_ERRORS,\n    LOADING_UI,\n    CLEAR_ERRORS,\n    SET_SUCCESS,\n    LOADING_DATA,\n    LOAD_ORDERS,\n    LOAD_CART,\n    LOAD_ORDER_STATS,\n    LOADING_CART,\n    CLEAR_LOADING_CART,\n    CLEAR_CURRENT_ORDER,\n    STOP_LOADING_DATA,\n} from \"../types\";\nimport axios from \"axios\";\n\n//load orders\nexport const loadOrders = ({\n    companyId,\n    nextPage = \"\",\n    limit = 30,\n    order_status = \"New\",\n    purchase_status = \"unpaid\",\n}) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n\n    axios\n        .get(\n            `/company/${companyId}/order/company-orders?nextPage=${nextPage}&limit=${limit}&order_status=${order_status}&purchase_status=${purchase_status}`\n        )\n        .then((res) => {\n            dispatch({\n                type: LOAD_ORDERS,\n                payload: res.data,\n            });\n            dispatch({ type: CLEAR_ERRORS });\n        })\n        .catch((error) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: error.response.data,\n            });\n        });\n};\n\n// load order stats\nexport const loadOrderStats = ({ companyID }) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n\n    const url = `/company/${companyID}/order/orderStats`;\n    axios\n        .get(url)\n        .then((res) => {\n            dispatch({\n                type: LOAD_ORDER_STATS,\n                payload: res.data,\n            });\n\n            dispatch({ type: STOP_LOADING_DATA });\n        })\n        .catch((error) => {\n            dispatch({ type: STOP_LOADING_DATA });\n            dispatch({\n                type: SET_ERRORS,\n                payload: error.response.data,\n            });\n        });\n};\n\n//  fetch cart\nexport const fetchCart = ({ cartID, companyID }) => (dispatch) => {\n    dispatch({ type: LOADING_CART });\n\n    const url = `/company/${companyID}/order/${cartID}`;\n\n    axios\n        .get(url)\n        .then((res) => {\n            console.log(res.data);\n            dispatch({\n                type: LOAD_CART,\n                payload: res.data,\n            });\n\n            dispatch({ type: CLEAR_LOADING_CART });\n        })\n        .catch((error) => {\n            dispatch({ type: CLEAR_LOADING_CART });\n            dispatch({\n                type: SET_ERRORS,\n                payload: error.response.data,\n            });\n        });\n};\n\n// set current order to null\nexport const clearCurrentOrder = () => (dispatch) => {\n    dispatch({\n        type: CLEAR_CURRENT_ORDER,\n    });\n};\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderDetail.js",["528","529","530","531"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SummaryCard from \"../../../Base/SummaryCard\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { connect } from \"react-redux\";\nimport {\n    fetchCart,\n    clearCurrentOrder,\n} from \"../../../../Redux/actions/orderAction\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: \"36ch\",\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: \"inline\",\n    },\n\n    root1: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"360px\",\n        flexShrink: 0,\n        height: \"100vh\",\n        minHeight: \"100vh\",\n        position: \"absolute\",\n        right: 0,\n        top: 0,\n        bottom: 0,\n        zIndex: 100,\n        overflowY: \"scroll\",\n        marginTop: theme.spacing(5),\n    },\n}));\n\nexport function AlignItemsList(props) {\n    const { items, clearCurrentOrder } = props;\n    const classes = useStyles();\n\n    const evalTotal = (t) => {\n        return t.reduce((accumulator, currentValue, index) => {\n            let x = currentValue.quantity * currentValue.price;\n            return accumulator + x;\n        }, 0);\n    };\n\n    return (\n        <>\n            {\" \"}\n            {items.map((item, index) => (\n                <List className={classes.root}>\n                    <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar alt={item.id} src={item.image_url} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${item.name} * ${item.quantity}`}\n                            secondary={\n                                <React.Fragment>\n                                    <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                    >\n                                        @:ksh\n                                    </Typography>\n                                    {item.quantity}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </List>\n            ))}\n            <List className={classes.root}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemText\n                        primary={`Total Payable:`}\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    className={classes.inline}\n                                    color=\"textPrimary\"\n                                >\n                                    ksh{\" \"}\n                                </Typography>\n                                {evalTotal(items)}\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" spacing={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => clearCurrentOrder()}\n                        style={{\n                            marginRight: \"15px\",\n                        }}\n                    >\n                        Close\n                    </Button>\n\n                    <Button variant=\"contained\" color=\"primary\" disabled>\n                        Action\n                    </Button>\n                </ListItem>\n            </List>\n        </>\n    );\n}\n\nfunction OrderDetail(props) {\n    const {\n        currentOrder: cart,\n        loading,\n        fetchCart,\n        clearCurrentOrder,\n        company: { company },\n    } = props;\n\n    const classes = useStyles();\n\n    // useEffect(() => {\n    //     // fecth cart items\n    //     fetchCart({\n    //         cart_id: cart.cart_id,\n    //         company_id: company[0].id,\n    //     });\n    // }, [cart]);\n\n    return (\n        <div className={classes.root1}>\n            <SummaryCard\n                title={cart.cart_id}\n                component={\n                    <AlignItemsList\n                        items={cart.items}\n                        clearCurrentOrder={clearCurrentOrder}\n                    />\n                }\n            />\n        </div>\n    );\n}\nconst mapStateToProps = (state) => ({\n    company: state.company,\n});\nconst mapActionsToProps = {\n    fetchCart,\n    clearCurrentOrder,\n};\n\nOrderDetail.propTypes = {\n    cart: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    fetchCart: PropTypes.func.isRequired,\n    clearCurrentOrder: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(OrderDetail);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/UserCardForm.js",["532","533"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { CircularProgress, Button, Grid } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport UploadButton from \"../../../Base/UploadButton\";\nimport useImageHandler from \"../../../../Hooks/useImageHandler\";\nimport ProgressBar from \"../../../Base/ProgressBarImages\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // display: \"flex\",\n        // maxWidth: 345,\n\n        // color: theme.palette.text.secondary,\n        \"& .MuiFormControl-root\": {\n            margin: theme.spacing(3),\n            width: 200,\n        },\n    },\n\n    form: {\n        // maxWidth: 345,\n        width: \"100%\",\n        // marginLeft: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        \"& .MuiFormControl-root\": {\n            margin: theme.spacing(3),\n            width: 2000,\n        },\n    },\n    UploadButton: {\n        margin: theme.spacing(1.5),\n    },\n    submit: {\n        margin: theme.spacing(0.5),\n    },\n    actionButtons: {\n        marginTop: theme.spacing(1.5),\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n}));\n\nconst validationSchema = Yup.object({\n    firstName: Yup.string().required(\"firstName is required\"),\n    lastName: Yup.string().required(\"lastName is required\"),\n    phoneNumber: Yup.string()\n        .min(10, \"must be atleast 10 characters\")\n        .max(15, \"must not exceed 15 characters\")\n        .required(\" Phone Number is required\"),\n    email: Yup.string().email(\"invalid email address\").required(),\n});\n\nfunction UserCardForm(props) {\n    const { handleUserUpdate, setEditUser, user, loading } = props;\n    const classes = useStyles();\n\n    const handleCancel = () => {\n        setEditUser(false);\n    };\n\n    const {\n        file,\n        setFile,\n        imageUrl,\n        setImageUrl,\n        imageChangeHandler,\n    } = useImageHandler();\n\n    React.useEffect(() => {\n        if (imageUrl !== null) {\n            user.image_url = imageUrl;\n        }\n    }, [imageUrl]);\n\n    return (\n        <div className={classes.root}>\n            <Formik\n                initialValues={{\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    email: user.email,\n                    phoneNumber: user.phoneNumber,\n                }}\n                validationSchema={validationSchema}\n                onSubmit={(values, actions) =>\n                    handleUserUpdate(values, actions, imageUrl)\n                }\n            >\n                <Form className={classes.form}>\n                    <Field\n                        name=\"firstName\"\n                        type=\"text\"\n                        label=\"First Name\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        name=\"lastName\"\n                        type=\"text\"\n                        label=\"Last Name\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        name=\"phoneNumber\"\n                        type=\"text\"\n                        label=\"PhoneNumber\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        component={TextField}\n                        fullWidth\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <div className={classes.UploadButton}>\n                        {file == null && (\n                            <UploadButton\n                                imageChangeHandler={imageChangeHandler}\n                                title={\n                                    file == null\n                                        ? \"Edit Profile Picture\"\n                                        : \"Profile Image Uploaded Successfully\"\n                                }\n                            />\n                        )}\n\n                        {file && (\n                            <ProgressBar\n                                file={file}\n                                setFile={setFile}\n                                setImageUrl={setImageUrl}\n                            />\n                        )}\n                    </div>\n\n                    <div className={classes.actionButtons}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                            type=\"submit\"\n                        >\n                            Ok\n                            {loading && (\n                                <CircularProgress\n                                    size={30}\n                                    className={classes.progress}\n                                />\n                            )}\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            className={classes.submit}\n                            onClick={handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nUserCardForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    setEditUser: PropTypes.func.isRequired,\n};\n\nexport default UserCardForm;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/UploadButton.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Base/ProgressBarImages.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Hooks/useImageHandler.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Utils/formatDate.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Profile/CompanyEditForm.js",["534"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { CircularProgress, Button, Grid } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport UploadButton from \"../../../Base/UploadButton\";\nimport useImageHandler from \"../../../../Hooks/useImageHandler\";\nimport ProgressBar from \"../../../Base/ProgressBarImages\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // display: \"flex\",\n        // maxWidth: 345,\n\n        // color: theme.palette.text.secondary,\n        \"& .MuiFormControl-root\": {\n            margin: theme.spacing(3),\n            width: 200,\n        },\n    },\n\n    form: {\n        // maxWidth: 345,\n        width: \"100%\",\n        // marginLeft: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        \"& .MuiFormControl-root\": {\n            margin: theme.spacing(3),\n            width: 2000,\n        },\n    },\n    uploadButton: {\n        margin: theme.spacing(1.5),\n    },\n    submit: {\n        margin: theme.spacing(0.5),\n    },\n    actionButtons: {\n        marginTop: theme.spacing(1.5),\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n}));\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required(\"companyName is required\"),\n    description: Yup.string()\n        .max(200, \"must not exceed 200 characters\")\n        .required(\"company description is required\"),\n    website_url: Yup.string().max(200, \"must not exceed 15 characters\"),\n    email: Yup.string().email(\"invalid companyEmail address\").required(),\n});\n\nfunction CompanyEditFormik(props) {\n    const { handleCompanyUpdate, setEditCompany, company, loading } = props;\n    const classes = useStyles();\n\n    const handleCancel = () => {\n        setEditCompany(false);\n    };\n\n    const {\n        file,\n        setFile,\n        imageUrl,\n        setImageUrl,\n        imageChangeHandler,\n    } = useImageHandler();\n\n    return (\n        <div className={classes.root}>\n            <Formik\n                initialValues={{\n                    name: company.name,\n                    email: company.email,\n                    description: company.description,\n                    website_url: company.website_url ?? \" \",\n                }}\n                validationSchema={validationSchema}\n                onSubmit={(values, actions) =>\n                    handleCompanyUpdate(values, actions, imageUrl)\n                }\n            >\n                <Form className={classes.form}>\n                    <Field\n                        name=\"name\"\n                        type=\"text\"\n                        label=\"Company Name\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        name=\"description\"\n                        type=\"text\"\n                        label=\"Company Description\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        name=\"website_url\"\n                        type=\"text\"\n                        label=\"Company Website\"\n                        component={TextField}\n                        fullWidth\n                    />\n\n                    <Field\n                        component={TextField}\n                        fullWidth\n                        label=\"CompanyEmail Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n\n                    <div className={classes.uploadButton}>\n                        {file == null && (\n                            <UploadButton\n                                imageChangeHandler={imageChangeHandler}\n                                title={\n                                    file == null\n                                        ? \"Edit Logo\"\n                                        : \"Logo Image Uploaded Successfully\"\n                                }\n                            />\n                        )}\n\n                        {file && (\n                            <ProgressBar\n                                file={file}\n                                setFile={setFile}\n                                setImageUrl={setImageUrl}\n                            />\n                        )}\n                    </div>\n\n                    <div className={classes.actionButtons}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                            type=\"submit\"\n                        >\n                            Ok\n                            {loading && (\n                                <CircularProgress\n                                    size={30}\n                                    className={classes.progress}\n                                />\n                            )}\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            color=\"default\"\n                            className={classes.submit}\n                            onClick={handleCancel}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nCompanyEditFormik.propTypes = {\n    classes: PropTypes.object.isRequired,\n    handleCompanyUpdate: PropTypes.func.isRequired,\n    company: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    setEditCompany: PropTypes.func.isRequired,\n};\n\nexport default CompanyEditFormik;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Orders/OrderSummary.js",["535","536"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SummaryCard from \"../../../Base/SummaryCard\";\nimport Loader from \"../../../Base/Loader\";\nimport { loadOrderStats } from \"../../../../Redux/actions/orderAction\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    summaryCards: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    summaryCard: {\n        margin: theme.spacing(1),\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction OrderSummary(props) {\n    const classes = useStyles();\n    const {\n        company: { id },\n        loadOrderStats,\n        loadingData,\n        stats,\n    } = props;\n\n    useEffect(() => {\n        loadOrderStats({ companyID: id });\n    }, []);\n\n    if (loadingData) {\n        return (\n            <div className={classes.summaryCards}>\n                <SummaryCard title={\"InCart\"} value={0} />\n                <SummaryCard title={\"All\"} value={0} />\n                <SummaryCard title={\"Paid\"} value={0} />\n            </div>\n        );\n    }\n    return (\n        <div className={classes.summaryCards}>\n            {stats && (\n                <>\n                    <SummaryCard title={\"InCart\"} value={stats.inCart} />\n                    <SummaryCard title={\"Paid\"} value={stats.paid} />\n                    <SummaryCard title={\"Returns\"} value={stats.returns} />\n                </>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    loadingData: state.ui.loadingData,\n    company: state.company.company[0],\n    stats: state.order.stats,\n});\n\nconst mapActionsToProps = {\n    loadOrderStats,\n};\n\nOrderSummary.propTypes = {\n    loadingData: PropTypes.bool.isRequired,\n    company: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(OrderSummary);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffTable.js",["537","538","539"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// mui\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// component\nimport SummaryCard from \"../../../Base/SummaryCard\";\nimport useTable from \"../../../Base/Table/useTable\";\nimport Loader from \"../../../Base/Loader\";\nimport DeletePeopleDialog, {\n    DeletePopUpDialog as ConfirmDialog,\n} from \"../../../Base/DeleteDialog\";\nimport { connect } from \"react-redux\";\nimport { isLoaded, isEmpty } from \"react-redux-firebase\";\nimport StaffActions from \"./StaffActions\";\nimport PeopleDialog from \"../../../Base/People/PeopleDialog\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport StaffCreate from \"./StaffCreate\";\nimport { fetchStaff } from \"../../../../Redux/actions/staffManagementActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n\n    grow: {\n        flexGrow: 0.6,\n        flexShrink: 0.6,\n    },\n    deleteButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nconst headCells = [\n    {\n        id: \"avatar\",\n        numeric: false,\n        disablePadding: true,\n        label: \"\",\n    },\n    {\n        id: \"\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Staff ID\",\n    },\n    {\n        id: \"fullName\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Full Name\",\n    },\n\n    {\n        id: \"email\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Email\",\n    },\n\n    {\n        id: \"role\",\n        numeric: false,\n        disablePadding: false,\n        label: \"role\",\n    },\n    {\n        id: \"isActive\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Account Status\",\n    },\n    {\n        id: \"phoneNumber\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Phone Number\",\n    },\n\n    {\n        id: \"Actions\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Actions\",\n    },\n];\n\nfunction StaffTable(props) {\n    const classes = useStyles();\n\n    const {\n        staff,\n        company,\n        openInPopup,\n        onDelete,\n        confirmDialog,\n        setConfirmDialog,\n        handleCreateStaff,\n        fetchStaff,\n    } = props;\n\n    React.useEffect(() => {\n        if (company !== null && company.id) {\n            fetchStaff(company.id);\n        }\n    }, []);\n\n    /* eslint-disable no-unused-vars */\n    const [filterFn, setFilterFn] = useState({\n        fn: (items) => {\n            return items;\n        },\n    });\n\n    const {\n        selected,\n        setSelected,\n        selectTableRow,\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n    } = useTable(staff, staff, headCells, filterFn);\n\n    const [snackOpen, setSnackOpen] = React.useState(false);\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n    const snackClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setSnackOpen(false);\n    };\n\n    return (\n        <>\n            <Snackbar\n                open={snackOpen}\n                autoHideDuration={2000}\n                onClose={snackClose}\n            >\n                <Alert onClose={snackClose} severity=\"success\">\n                    {snackOpen}\n                </Alert>\n            </Snackbar>\n            <div className={classes.root}>\n                <Toolbar>\n                    <div edge=\"start\" className={classes.grow} />\n                    <PeopleDialog\n                        title=\"Create Staff\"\n                        edge=\"end\"\n                        onSave={() => {\n                            setSnackOpen(\"Person added\");\n                        }}\n                        render={(open) => (\n                            <Button\n                                edge=\"end\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                startIcon={<AddIcon />}\n                                onClick={open}\n                            >\n                                Add Person\n                            </Button>\n                        )}\n                    >\n                        <StaffCreate handleCreateStaff={handleCreateStaff} />\n                    </PeopleDialog>\n                    {selected.length > 0 && (\n                        <div>\n                            <DeletePeopleDialog\n                                ids={selected}\n                                onSave={() => {\n                                    // delete user\n                                    onDelete(selected);\n\n                                    setSnackOpen(\n                                        `${selected.length} Staff${\n                                            selected.length > 1 ? \"s\" : \"\"\n                                        } Deleted`\n                                    );\n                                    setSelected([]);\n                                }}\n                                render={(open) => (\n                                    <Button\n                                        className={classes.deleteButton}\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<DeleteIcon />}\n                                        onClick={open}\n                                    >\n                                        {\" \"}\n                                        Delete {selected.length} selected\n                                    </Button>\n                                )}\n                            />\n                        </div>\n                    )}\n                </Toolbar>\n\n                {isEmpty(staff) ? (\n                    <SummaryCard title=\"No staff found, create one\" />\n                ) : (\n                    <SummaryCard\n                        title={\"Staff\"}\n                        value={\n                            <>\n                                <TblContainer>\n                                    <TblHead />\n\n                                    <TableBody>\n                                        {recordsAfterPagingAndSorting().map(\n                                            (row, index) => {\n                                                const isItemSelected =\n                                                    isSelected(row.user.id);\n                                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                                return (\n                                                    <TableRow\n                                                        hover\n                                                        role=\"checkbox\"\n                                                        aria-checked={\n                                                            isItemSelected\n                                                        }\n                                                        tabIndex={-1}\n                                                        onClick={(e) => {\n                                                            if (\n                                                                e.target\n                                                                    .type ===\n                                                                    \"checkbox\" ||\n                                                                e.target.className.indexOf(\n                                                                    \"Checkbox\"\n                                                                ) > 0\n                                                            ) {\n                                                                return;\n                                                            }\n                                                        }}\n                                                        key={`person-${row.user.id}`}\n                                                        selected={\n                                                            isItemSelected\n                                                        }\n                                                        style={{\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                    >\n                                                        <TableCell\n                                                            padding=\"checkbox\"\n                                                            onClick={(e) => {\n                                                                selectTableRow(\n                                                                    row.user.id\n                                                                );\n                                                            }}\n                                                        >\n                                                            <Checkbox\n                                                                checked={\n                                                                    isItemSelected\n                                                                }\n                                                                inputProps={{\n                                                                    \"aria-labelledby\":\n                                                                        labelId,\n                                                                }}\n                                                                onChange={(\n                                                                    e\n                                                                ) => {\n                                                                    selectTableRow(\n                                                                        row.user\n                                                                            .id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Avatar\n                                                                alt={\n                                                                    row.user\n                                                                        .firstName\n                                                                }\n                                                                src={\n                                                                    row.user\n                                                                        .image_url\n                                                                }\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell\n                                                            component=\"th\"\n                                                            id={labelId}\n                                                            scope=\"row\"\n                                                            padding=\"none\"\n                                                        >\n                                                            {row.user.id}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            align=\"left\"\n                                                            padding=\"none\"\n                                                        >\n                                                            {row.user.firstName}\n                                                            {\"\"}\n                                                            {row.user.lastName}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            align=\"left\"\n                                                            padding=\"none\"\n                                                        >\n                                                            {row.user.email}\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            {row.user.role}\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            {row.user.active\n                                                                ? \"Active\"\n                                                                : \"Suspended\"}\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            {\n                                                                row.user\n                                                                    .phoneNumber\n                                                            }\n                                                        </TableCell>\n\n                                                        <TableCell padding=\"none\">\n                                                            <StaffActions\n                                                                viewStaff={() =>\n                                                                    openInPopup(\n                                                                        row\n                                                                    )\n                                                                }\n                                                            />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                );\n                                            }\n                                        )}\n                                    </TableBody>\n                                </TblContainer>\n                                <TblPagination />\n                            </>\n                        }\n                    />\n                )}\n\n                <ConfirmDialog\n                    confirmDialog={confirmDialog}\n                    setConfirmDialog={setConfirmDialog}\n                />\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { staff: state.staffManagement.staff };\n};\n\nconst mapActionsToProps = {\n    fetchStaff,\n};\n\nStaffTable.propTypes = {\n    ui: PropTypes.object.isRequired,\n    openInPopup: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    confirmDialog: PropTypes.object.isRequired,\n    setConfirmDialog: PropTypes.func.isRequired,\n    handleCreateStaff: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(StaffTable);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffEditForm.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffCreate.js",["540"],"import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n// form stuff\nimport { Formik, Field, Form } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport * as Yup from \"yup\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = makeStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = Yup.object({\n    firstName: Yup.string().required(\"firstName is required\"),\n    lastName: Yup.string().required(\"lastNaame is required\"),\n    phoneNumber: Yup.string()\n        .min(10, \"must be atleast 10 characters\")\n        .max(15, \"must not exceed 15 characters\")\n        .required(\" Phone Number is required\"),\n    email: Yup.string().email(\"invalid email address\").required(),\n    password: Yup.string()\n        .min(8)\n        .max(200)\n        .matches(/[^A-Za-z0-9]/, \"password must contain a special character\")\n        .matches(/[A-Z]/, \"password must contain an uppercase letter\")\n        .matches(/[a-z]/, \"password must contain a lowercase letter\")\n        .matches(/[0-9]/, \"password must contain a number\")\n        .required(),\n    confirmPassword: Yup.string().oneOf(\n        [Yup.ref(\"password\"), null],\n        \"Passwords must match\"\n    ),\n});\n\nfunction StaffCreate(props) {\n    const classes = styles();\n    const { handleClose, handleCreateStaff, loading, company } = props;\n    /* eslint-disable no-unused-vars */\n\n    const createStaff = (values, action) => {\n        const staff = {\n            user: {\n                ...values,\n                role: \"staff\",\n            },\n            company_id: company[0].id,\n        };\n\n        handleCreateStaff({ staffData: staff, closeModal: handleClose });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                firstName: \"dol\",\n                lastName: \"cample\",\n                email: \"dol@gmail.com\",\n                phoneNumber: \"7143823667\",\n                password: \"S@leysha2013\",\n                confirmPassword: \"S@leysha2013\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={createStaff}\n        >\n            <Form>\n                <Field\n                    name=\"firstName\"\n                    type=\"text\"\n                    label=\"First Name\"\n                    variant=\"outlined\"\n                    component={TextField}\n                    fullWidth\n                />\n\n                <Field\n                    name=\"lastName\"\n                    type=\"text\"\n                    label=\"Last Name\"\n                    variant=\"outlined\"\n                    component={TextField}\n                    fullWidth\n                />\n\n                <Field\n                    name=\"phoneNumber\"\n                    type=\"text\"\n                    label=\"PhoneNumber\"\n                    variant=\"outlined\"\n                    component={TextField}\n                    fullWidth\n                />\n\n                <Field\n                    variant=\"outlined\"\n                    component={TextField}\n                    fullWidth\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                />\n\n                <Field\n                    variant=\"outlined\"\n                    type=\"password\"\n                    component={TextField}\n                    fullWidth\n                    label=\"Password\"\n                    name=\"password\"\n                />\n\n                <Field\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    label=\"Confirm Password\"\n                    component={TextField}\n                    variant=\"outlined\"\n                    fullWidth\n                />\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={loading}\n                    className={classes.submit}\n                    type=\"submit\"\n                >\n                    Create Account\n                    {loading && (\n                        <CircularProgress\n                            size={30}\n                            className={classes.progress}\n                        />\n                    )}\n                </Button>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"medium\"\n                    onClick={handleClose}\n                    style={{\n                        marginLeft: \"10px\",\n                    }}\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </Formik>\n    );\n}\n\nconst mapActionsToProps = {};\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.ui.loading,\n        company: state.company.company,\n    };\n};\n\nStaffCreate.propTypes = {\n    handleClose: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(StaffCreate);\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffActions.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Components/Pages/Company/Staff/StaffSummary.js",["541","542"],"import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SummaryCard from \"../../../Base/SummaryCard\";\nimport { first } from \"lodash\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    summaryCards: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    summaryCard: {\n        margin: theme.spacing(1),\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nconst staffSuspended = (staffArr, state) => {\n    return staffArr.filter((m) => m.user.active === state);\n};\n\nfunction StaffSummary(props) {\n    const classes = useStyles();\n    const {\n        company: { id },\n        loading,\n        staff,\n    } = props;\n\n    if (loading || staff.length == 0) {\n        return (\n            <div className={classes.summaryCards}>\n                <SummaryCard title={\"Total\"} value={0} />\n                <SummaryCard title={\"Active\"} value={0} />\n                <SummaryCard title={\"Suspended\"} value={0} />\n            </div>\n        );\n    }\n\n    return (\n        <div className={classes.summaryCards}>\n            {staff && (\n                <>\n                    <SummaryCard title={\"Total\"} value={staff.length} />\n                    <SummaryCard\n                        title={\"Active\"}\n                        value={staffSuspended(staff, true).length}\n                    />\n                    <SummaryCard\n                        title={\"Suspended\"}\n                        value={staffSuspended(staff, false).length}\n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    loading: state.ui.loading,\n    company: first(state.company.company),\n    staff: state.staffManagement.staff,\n});\n\nconst mapActionsToProps = {};\n\nStaffSummary.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    company: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(StaffSummary);\n",{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","replacedBy":"546"},{"ruleId":"543","replacedBy":"547"},{"ruleId":"545","replacedBy":"548"},{"ruleId":"549","severity":1,"message":"550","line":1,"column":17,"nodeType":"551","messageId":"552","endLine":1,"endColumn":25},{"ruleId":"549","severity":1,"message":"553","line":29,"column":9,"nodeType":"551","messageId":"552","endLine":29,"endColumn":17},{"ruleId":"543","replacedBy":"554"},{"ruleId":"545","replacedBy":"555"},{"ruleId":"543","replacedBy":"556"},{"ruleId":"545","replacedBy":"557"},{"ruleId":"558","severity":1,"message":"559","line":8,"column":5,"nodeType":"560","messageId":"561","endLine":10,"endColumn":6},{"ruleId":"549","severity":1,"message":"553","line":28,"column":36,"nodeType":"551","messageId":"552","endLine":28,"endColumn":44},{"ruleId":"549","severity":1,"message":"562","line":2,"column":5,"nodeType":"551","messageId":"552","endLine":2,"endColumn":15},{"ruleId":"563","severity":1,"message":"564","line":22,"column":13,"nodeType":"565","messageId":"566","endLine":22,"endColumn":15},{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","replacedBy":"546"},{"ruleId":"567","severity":1,"message":"568","line":20,"column":1,"nodeType":"569","endLine":81,"endColumn":2},{"ruleId":"563","severity":1,"message":"564","line":43,"column":30,"nodeType":"565","messageId":"566","endLine":43,"endColumn":32},{"ruleId":"570","severity":1,"message":"571","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":16},{"ruleId":"549","severity":1,"message":"572","line":15,"column":10,"nodeType":"551","messageId":"552","endLine":15,"endColumn":17},{"ruleId":"549","severity":1,"message":"573","line":36,"column":11,"nodeType":"551","messageId":"552","endLine":36,"endColumn":18},{"ruleId":"549","severity":1,"message":"574","line":38,"column":45,"nodeType":"551","messageId":"552","endLine":38,"endColumn":55},{"ruleId":"575","severity":1,"message":"576","line":57,"column":8,"nodeType":"577","endLine":57,"endColumn":10,"suggestions":"578"},{"ruleId":"549","severity":1,"message":"579","line":4,"column":5,"nodeType":"551","messageId":"552","endLine":4,"endColumn":18},{"ruleId":"549","severity":1,"message":"580","line":6,"column":5,"nodeType":"551","messageId":"552","endLine":6,"endColumn":16},{"ruleId":"549","severity":1,"message":"581","line":7,"column":5,"nodeType":"551","messageId":"552","endLine":7,"endColumn":14},{"ruleId":"549","severity":1,"message":"582","line":9,"column":5,"nodeType":"551","messageId":"552","endLine":9,"endColumn":16},{"ruleId":"549","severity":1,"message":"583","line":79,"column":19,"nodeType":"551","messageId":"552","endLine":79,"endColumn":24},{"ruleId":"549","severity":1,"message":"550","line":1,"column":17,"nodeType":"551","messageId":"552","endLine":1,"endColumn":25},{"ruleId":"543","replacedBy":"584"},{"ruleId":"545","replacedBy":"585"},{"ruleId":"543","replacedBy":"586"},{"ruleId":"545","replacedBy":"587"},{"ruleId":"549","severity":1,"message":"588","line":2,"column":10,"nodeType":"551","messageId":"552","endLine":2,"endColumn":19},{"ruleId":"549","severity":1,"message":"589","line":3,"column":8,"nodeType":"551","messageId":"552","endLine":3,"endColumn":15},{"ruleId":"549","severity":1,"message":"590","line":4,"column":8,"nodeType":"551","messageId":"552","endLine":4,"endColumn":24},{"ruleId":"549","severity":1,"message":"591","line":6,"column":8,"nodeType":"551","messageId":"552","endLine":6,"endColumn":14},{"ruleId":"549","severity":1,"message":"592","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":12},{"ruleId":"549","severity":1,"message":"593","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":17},{"ruleId":"549","severity":1,"message":"594","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":18},{"ruleId":"549","severity":1,"message":"595","line":10,"column":8,"nodeType":"551","messageId":"552","endLine":10,"endColumn":16},{"ruleId":"549","severity":1,"message":"596","line":11,"column":8,"nodeType":"551","messageId":"552","endLine":11,"endColumn":14},{"ruleId":"549","severity":1,"message":"597","line":14,"column":8,"nodeType":"551","messageId":"552","endLine":14,"endColumn":14},{"ruleId":"549","severity":1,"message":"598","line":17,"column":8,"nodeType":"551","messageId":"552","endLine":17,"endColumn":20},{"ruleId":"549","severity":1,"message":"599","line":18,"column":10,"nodeType":"551","messageId":"552","endLine":18,"endColumn":21},{"ruleId":"543","replacedBy":"600"},{"ruleId":"545","replacedBy":"601"},{"ruleId":"563","severity":1,"message":"564","line":16,"column":21,"nodeType":"565","messageId":"566","endLine":16,"endColumn":23},{"ruleId":"549","severity":1,"message":"590","line":9,"column":8,"nodeType":"551","messageId":"552","endLine":9,"endColumn":24},{"ruleId":"549","severity":1,"message":"602","line":19,"column":8,"nodeType":"551","messageId":"552","endLine":19,"endColumn":19},{"ruleId":"549","severity":1,"message":"603","line":24,"column":10,"nodeType":"551","messageId":"552","endLine":24,"endColumn":17},{"ruleId":"549","severity":1,"message":"604","line":26,"column":10,"nodeType":"551","messageId":"552","endLine":26,"endColumn":25},{"ruleId":"549","severity":1,"message":"605","line":27,"column":10,"nodeType":"551","messageId":"552","endLine":27,"endColumn":13},{"ruleId":"549","severity":1,"message":"562","line":2,"column":5,"nodeType":"551","messageId":"552","endLine":2,"endColumn":15},{"ruleId":"563","severity":1,"message":"564","line":20,"column":32,"nodeType":"565","messageId":"566","endLine":20,"endColumn":34},{"ruleId":"549","severity":1,"message":"606","line":39,"column":62,"nodeType":"551","messageId":"552","endLine":39,"endColumn":64},{"ruleId":"549","severity":1,"message":"607","line":13,"column":8,"nodeType":"551","messageId":"552","endLine":13,"endColumn":18},{"ruleId":"549","severity":1,"message":"606","line":40,"column":51,"nodeType":"551","messageId":"552","endLine":40,"endColumn":53},{"ruleId":"563","severity":1,"message":"564","line":33,"column":45,"nodeType":"565","messageId":"566","endLine":33,"endColumn":47},{"ruleId":"563","severity":1,"message":"564","line":72,"column":50,"nodeType":"565","messageId":"566","endLine":72,"endColumn":52},{"ruleId":"563","severity":1,"message":"564","line":117,"column":50,"nodeType":"565","messageId":"566","endLine":117,"endColumn":52},{"ruleId":"549","severity":1,"message":"562","line":2,"column":5,"nodeType":"551","messageId":"552","endLine":2,"endColumn":15},{"ruleId":"549","severity":1,"message":"608","line":10,"column":22,"nodeType":"551","messageId":"552","endLine":10,"endColumn":32},{"ruleId":"549","severity":1,"message":"609","line":48,"column":12,"nodeType":"551","messageId":"552","endLine":48,"endColumn":20},{"ruleId":"563","severity":1,"message":"564","line":89,"column":45,"nodeType":"565","messageId":"566","endLine":89,"endColumn":47},{"ruleId":"563","severity":1,"message":"564","line":88,"column":41,"nodeType":"565","messageId":"566","endLine":88,"endColumn":43},{"ruleId":"575","severity":1,"message":"610","line":27,"column":8,"nodeType":"577","endLine":27,"endColumn":18,"suggestions":"611"},{"ruleId":"563","severity":1,"message":"564","line":38,"column":53,"nodeType":"565","messageId":"566","endLine":38,"endColumn":55},{"ruleId":"549","severity":1,"message":"612","line":4,"column":8,"nodeType":"551","messageId":"552","endLine":4,"endColumn":21},{"ruleId":"575","severity":1,"message":"613","line":27,"column":8,"nodeType":"577","endLine":27,"endColumn":22,"suggestions":"614"},{"ruleId":"549","severity":1,"message":"550","line":1,"column":17,"nodeType":"551","messageId":"552","endLine":1,"endColumn":25},{"ruleId":"567","severity":1,"message":"568","line":19,"column":1,"nodeType":"569","endLine":57,"endColumn":2},{"ruleId":"549","severity":1,"message":"596","line":6,"column":8,"nodeType":"551","messageId":"552","endLine":6,"endColumn":14},{"ruleId":"549","severity":1,"message":"591","line":7,"column":8,"nodeType":"551","messageId":"552","endLine":7,"endColumn":14},{"ruleId":"549","severity":1,"message":"594","line":8,"column":8,"nodeType":"551","messageId":"552","endLine":8,"endColumn":18},{"ruleId":"549","severity":1,"message":"615","line":93,"column":9,"nodeType":"551","messageId":"552","endLine":93,"endColumn":11},{"ruleId":"575","severity":1,"message":"616","line":108,"column":8,"nodeType":"577","endLine":108,"endColumn":10,"suggestions":"617"},{"ruleId":"549","severity":1,"message":"618","line":3,"column":5,"nodeType":"551","messageId":"552","endLine":3,"endColumn":15},{"ruleId":"549","severity":1,"message":"619","line":5,"column":5,"nodeType":"551","messageId":"552","endLine":5,"endColumn":16},{"ruleId":"549","severity":1,"message":"620","line":1,"column":17,"nodeType":"551","messageId":"552","endLine":1,"endColumn":26},{"ruleId":"549","severity":1,"message":"621","line":129,"column":9,"nodeType":"551","messageId":"552","endLine":129,"endColumn":16},{"ruleId":"549","severity":1,"message":"622","line":130,"column":9,"nodeType":"551","messageId":"552","endLine":130,"endColumn":18},{"ruleId":"549","severity":1,"message":"623","line":132,"column":20,"nodeType":"551","messageId":"552","endLine":132,"endColumn":27},{"ruleId":"549","severity":1,"message":"624","line":6,"column":36,"nodeType":"551","messageId":"552","endLine":6,"endColumn":40},{"ruleId":"575","severity":1,"message":"625","line":79,"column":8,"nodeType":"577","endLine":79,"endColumn":18,"suggestions":"626"},{"ruleId":"549","severity":1,"message":"624","line":6,"column":36,"nodeType":"551","messageId":"552","endLine":6,"endColumn":40},{"ruleId":"549","severity":1,"message":"627","line":5,"column":8,"nodeType":"551","messageId":"552","endLine":5,"endColumn":14},{"ruleId":"575","severity":1,"message":"628","line":32,"column":8,"nodeType":"577","endLine":32,"endColumn":10,"suggestions":"629"},{"ruleId":"549","severity":1,"message":"627","line":17,"column":8,"nodeType":"551","messageId":"552","endLine":17,"endColumn":14},{"ruleId":"549","severity":1,"message":"630","line":22,"column":10,"nodeType":"551","messageId":"552","endLine":22,"endColumn":18},{"ruleId":"575","severity":1,"message":"631","line":120,"column":8,"nodeType":"577","endLine":120,"endColumn":10,"suggestions":"632"},{"ruleId":"549","severity":1,"message":"624","line":6,"column":10,"nodeType":"551","messageId":"552","endLine":6,"endColumn":14},{"ruleId":"549","severity":1,"message":"606","line":26,"column":20,"nodeType":"551","messageId":"552","endLine":26,"endColumn":22},{"ruleId":"563","severity":1,"message":"564","line":31,"column":33,"nodeType":"565","messageId":"566","endLine":31,"endColumn":35},"no-native-reassign",["633"],"no-negated-in-lhs",["634"],["633"],["634"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.",["633"],["634"],["633"],["634"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'SET_ERRORS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'HomeIcon' is defined but never used.","'isEmpty' is defined but never used.","'classes' is assigned a value but never used.","'fetchStaff' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'company', 'companyMenu', and 'loadMenu'. Either include them or remove the dependency array.","ArrayExpression",["635"],"'CLEAR_CURRENT' is defined but never used.","'SET_CURRENT' is defined but never used.","'SET_STAFF' is defined but never used.","'STAFF_ERROR' is defined but never used.","'staff' is assigned a value but never used.",["633"],["634"],["633"],["634"],"'useParams' is defined but never used.","'Content' is defined but never used.","'CircularProgress' is defined but never used.","'Avatar' is defined but never used.","'Chip' is defined but never used.","'DriveIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'PeopleDialog' is defined but never used.","'useSelector' is defined but never used.",["633"],["634"],"'SummaryCard' is defined but never used.","'compose' is defined but never used.","'firebaseConnect' is defined but never used.","'get' is defined but never used.","'id' is assigned a value but never used.","'formatDate' is defined but never used.","'IconButton' is defined but never used.","'editOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'company', 'fetchMealsByCategory', 'menu.id', and 'setMeal'. Either include them or remove the dependency array.",["636"],"'DialogActions' is defined but never used.","React Hook useEffect has missing dependencies: 'setAddMeal' and 'setImageUrl'. Either include them or remove the dependency array.",["637"],"'ui' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'company.id' and 'loadOrders'. Either include them or remove the dependency array.",["638"],"'LOADING_UI' is defined but never used.","'SET_SUCCESS' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'fetchCart' is assigned a value but never used.","'company' is assigned a value but never used.","'Grid' is defined but never used.","React Hook React.useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["639"],"'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'loadOrderStats'. Either include them or remove the dependency array.",["640"],"'isLoaded' is defined but never used.","React Hook React.useEffect has missing dependencies: 'company' and 'fetchStaff'. Either include them or remove the dependency array.",["641"],"no-global-assign","no-unsafe-negation",{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},"Update the dependencies array to be: [company, companyMenu, loadMenu]",{"range":"656","text":"657"},"Update the dependencies array to be: [category, company, fetchMealsByCategory, menu.id, setMeal]",{"range":"658","text":"659"},"Update the dependencies array to be: [url, setFile, setImageUrl, setAddMeal]",{"range":"660","text":"661"},"Update the dependencies array to be: [company.id, loadOrders]",{"range":"662","text":"663"},"Update the dependencies array to be: [imageUrl, user]",{"range":"664","text":"665"},"Update the dependencies array to be: [id, loadOrderStats]",{"range":"666","text":"667"},"Update the dependencies array to be: [company, fetchStaff]",{"range":"668","text":"669"},[1514,1516],"[company, companyMenu, loadMenu]",[753,763],"[category, company, fetchMealsByCategory, menu.id, setMeal]",[721,735],"[url, setFile, setImageUrl, setAddMeal]",[2672,2674],"[company.id, loadOrders]",[2198,2208],"[imageUrl, user]",[833,835],"[id, loadOrderStats]",[2920,2922],"[company, fetchStaff]"]