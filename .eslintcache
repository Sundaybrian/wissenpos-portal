[{"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js":"1","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App.js":"2","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Home.js":"3","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Dashboard.js":"4","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/Navbar.js":"5","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/RouteWithSubRoutes.js":"6","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js":"7","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Login/Login.js":"8","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Register/Register.js":"9","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Landing/Landing.js":"10","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js":"11","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/PrivateRoute.js":"12","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/index.js":"13","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/store.js":"14","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/authReducer.js":"15","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/types.js":"16","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/uiReducer.js":"17","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/actions/authActions.js":"18","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/config.js":"19","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js":"20","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/AppBarAndDrawer/AppBarAndDrawer.js":"21","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js":"22","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js":"23"},{"size":757,"mtime":1613556585920,"results":"24","hashOfConfig":"25"},{"size":1856,"mtime":1614166576532,"results":"26","hashOfConfig":"25"},{"size":781,"mtime":1606319971776,"results":"27","hashOfConfig":"28"},{"size":772,"mtime":1614162468094,"results":"29","hashOfConfig":"25"},{"size":885,"mtime":1606319984480,"results":"30","hashOfConfig":"25"},{"size":454,"mtime":1606306570088,"results":"31","hashOfConfig":"28"},{"size":619,"mtime":1606308316169,"results":"32","hashOfConfig":"28"},{"size":8244,"mtime":1613647293889,"results":"33","hashOfConfig":"25"},{"size":12033,"mtime":1613655034065,"results":"34","hashOfConfig":"25"},{"size":855,"mtime":1607510280016,"results":"35","hashOfConfig":"25"},{"size":362,"mtime":1606296899356,"results":"36","hashOfConfig":"25"},{"size":468,"mtime":1613556585976,"results":"37","hashOfConfig":"25"},{"size":161,"mtime":1607594448215,"results":"38","hashOfConfig":"25"},{"size":389,"mtime":1607120432898,"results":"39","hashOfConfig":"25"},{"size":682,"mtime":1608211716993,"results":"40","hashOfConfig":"25"},{"size":559,"mtime":1607614206703,"results":"41","hashOfConfig":"25"},{"size":703,"mtime":1613655370787,"results":"42","hashOfConfig":"25"},{"size":1540,"mtime":1613828035196,"results":"43","hashOfConfig":"25"},{"size":338,"mtime":1607507293148,"results":"44","hashOfConfig":"25"},{"size":726,"mtime":1613645974975,"results":"45","hashOfConfig":"25"},{"size":7780,"mtime":1613850025333,"results":"46","hashOfConfig":"25"},{"size":918,"mtime":1613840522490,"results":"47","hashOfConfig":"25"},{"size":464,"mtime":1613840522494,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"wph79w",{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vxspiw",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/index.js",[],["101","102"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/App.js",["103","104","105","106","107"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Home.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Dashboard/Dashboard.js",["108","109"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/Navbar.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/RouteWithSubRoutes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/routes.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Login/Login.js",["110","111"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Appicon from \"../../../images/logo.png\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n//mui stuff\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../redux/actions/authActions\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright Â© \"}\n            <Link color=\"inherit\" href=\"https://wissensof.com/\">\n                Wissenpos\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport class Login extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {},\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const userData = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n\n        this.props.loginUser(userData, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading },\n        } = this.props;\n        const { errors } = this.state;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        // direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Login\n                            </Typography>\n                            <form\n                                className={classes.form}\n                                noValidate\n                                onSubmit={this.handleSubmit}\n                            >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    helperText={errors.message}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"remember\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    type=\"submit\"\n                                >\n                                    Sign In\n                                    {loading && (\n                                        <CircularProgress\n                                            size={30}\n                                            className={classes.progress}\n                                        />\n                                    )}\n                                </Button>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/register\" variant=\"body2\">\n                                            {\"Don't have an account? Sign Up\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    loginUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Login));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Register/Register.js",["112","113"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n//mui stuff\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// redux\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../../redux/actions/authActions\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {\"Copyright Â© \"}\n            <Link color=\"inherit\" href=\"https://wissensof.com/\">\n                Wissenpos\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    );\n}\n\nconst styles = createStyles((theme) => ({\n    root: {\n        height: \"100vh\",\n    },\n    image: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.grey[900]\n                : theme.palette.grey[50],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        paddingTop: \"40px\",\n    },\n    paper: {\n        margin: theme.spacing(8, 8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        position: \"absolute\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                role: \"owner\",\n            },\n            loading: false,\n            errors: {},\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.user.password !== this.state.user.confirmPassword) {\n            // raise form error for the fields\n            // return\n            this.setState({\n                errors: \"Passwords must match\",\n            });\n\n            return false;\n        }\n\n        this.props.registerUser(this.state.user, this.props.history);\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            user: { ...this.state.user, [e.target.name]: e.target.value },\n        });\n    };\n\n    render() {\n        const {\n            classes,\n            ui: { loading, errors },\n        } = this.props;\n\n        return (\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid container justify=\"center\" className={classes.image}>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        // direction=\"row\"\n                        elevation={6}\n                        square\n                    >\n                        <Grid className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Register\n                            </Typography>\n                            <form\n                                className={classes.form}\n                                noValidate\n                                onSubmit={this.handleSubmit}\n                            >\n                                <TextField\n                                    id=\"firstName\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    type=\"text\"\n                                    label=\"First Name\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.firstName}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    id=\"lastName\"\n                                    margin=\"normal\"\n                                    name=\"lastName\"\n                                    type=\"text\"\n                                    label=\"Last Name\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.lastName}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    id=\"phoneNumber\"\n                                    margin=\"normal\"\n                                    name=\"phoneNumber\"\n                                    type=\"text\"\n                                    label=\"PhoneNumber\"\n                                    inputProps={{\n                                        minLength: 10,\n                                        maxLength: 15,\n                                    }}\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.phoneNumber}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    value={this.state.user.email}\n                                    onChange={this.handleChange}\n                                    helperText={errors.message}\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    inputProps={{ minLength: 8 }}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.password}\n                                    onChange={this.handleChange}\n                                />\n\n                                <TextField\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    type=\"password\"\n                                    label=\"Confirm Password\"\n                                    inputProps={{ minLength: 8 }}\n                                    helperText={errors.message}\n                                    error={errors.message ? true : false}\n                                    value={this.state.user.confirmPassword}\n                                    onChange={this.handleChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            value=\"remember\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Remember me\"\n                                />\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    type=\"submit\"\n                                >\n                                    Register\n                                    {loading && (\n                                        <CircularProgress\n                                            size={30}\n                                            className={classes.progress}\n                                        />\n                                    )}\n                                </Button>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"/login\" variant=\"body2\">\n                                            {\"Already have an account? Log in\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                                <Box mt={5}>\n                                    <Copyright />\n                                </Box>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    ui: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    ui: state.ui,\n});\n\nconst mapActionsToProps = {\n    registerUser,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(Register));\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/pages/Landing/Landing.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/reportWebVitals.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/PrivateRoute.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/index.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/store.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/authReducer.js",["114"],"import {\n    SET_USER,\n    LOADING_UI,\n    SET_AUTHENTICATED,\n    SET_UAUTHENTICATED,\n} from \"../types\";\n\nconst initialState = {\n    user: null,\n    authenticated: false,\n};\n\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true,\n            };\n        case SET_UAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                ...state,\n                authenticated: true,\n                user: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/types.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/reducers/uiReducer.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/redux/actions/authActions.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/utils.js/config.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/theme.js",["115"],"import React, { useState } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, blueGrey } from \"@material-ui/core/colors\";\n\nconst defaultTheme = {\n    palette: {\n        primary: blue,\n        secondary: blueGrey, //ss,\n        //type: \"dark\",\n    },\n    typography: {\n        fontFamily: \"'Oxanium', cursive;\",\n    },\n    status: {\n        danger: \"orange\",\n    },\n};\n\nexport function useTheme() {\n    const [currentTheme, setCurrentTheme] = useState({\n        palette: {\n            primary: blue,\n            secondary: blueGrey,\n        },\n    });\n    const muiTheme = createMuiTheme({\n        ...defaultTheme,\n        ...currentTheme,\n    });\n    return [muiTheme, setCurrentTheme];\n}\n","/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/components/layout/AppBarAndDrawer/AppBarAndDrawer.js",["116"],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/PalettePicker.js",[],"/home/sundaypriest/Desktop/projects/000.softgap technologies/wissenpos-portal/src/Theme/colors.js",["117"],"import {\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n} from \"@material-ui/core/colors\";\r\n\r\nexport default [\r\n  red,\r\n  pink,\r\n  purple,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  lightBlue,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lightGreen,\r\n  lime,\r\n  yellow,\r\n  amber,\r\n  deepOrange,\r\n  brown,\r\n  grey,\r\n  blueGrey,\r\n];\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"126","line":9,"column":27,"nodeType":"124","messageId":"125","endLine":9,"endColumn":43},{"ruleId":"122","severity":1,"message":"127","line":14,"column":8,"nodeType":"124","messageId":"125","endLine":14,"endColumn":14},{"ruleId":"122","severity":1,"message":"128","line":23,"column":7,"nodeType":"124","messageId":"125","endLine":23,"endColumn":12},{"ruleId":"122","severity":1,"message":"129","line":39,"column":9,"nodeType":"124","messageId":"125","endLine":39,"endColumn":22},{"ruleId":"122","severity":1,"message":"130","line":11,"column":12,"nodeType":"124","messageId":"125","endLine":11,"endColumn":18},{"ruleId":"122","severity":1,"message":"131","line":11,"column":20,"nodeType":"124","messageId":"125","endLine":11,"endColumn":30},{"ruleId":"122","severity":1,"message":"132","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},{"ruleId":"122","severity":1,"message":"133","line":4,"column":18,"nodeType":"124","messageId":"125","endLine":4,"endColumn":28},{"ruleId":"122","severity":1,"message":"134","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"133","line":4,"column":18,"nodeType":"124","messageId":"125","endLine":4,"endColumn":28},{"ruleId":"122","severity":1,"message":"135","line":3,"column":5,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},{"ruleId":"122","severity":1,"message":"136","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"130","line":66,"column":55,"nodeType":"124","messageId":"125","endLine":66,"endColumn":61},{"ruleId":"137","severity":1,"message":"138","line":22,"column":1,"nodeType":"139","endLine":41,"endColumn":3},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'MuiThemeProvider' is defined but never used.","'Navbar' is defined but never used.","'theme' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'routes' is assigned a value but never used.","'setRoutess' is assigned a value but never used.","'Appicon' is defined but never used.","'RouterLink' is defined but never used.","'axios' is defined but never used.","'LOADING_UI' is defined but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]